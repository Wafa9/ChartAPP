{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport colors from \"../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomButton = function CustomButton(_ref) {\n  var title = _ref.title,\n      secondary = _ref.secondary,\n      primary = _ref.primary,\n      danger = _ref.danger,\n      disabled = _ref.disabled,\n      loading = _ref.loading,\n      onPress = _ref.onPress,\n      style = _ref.style;\n\n  var getBgColor = function getBgColor() {\n    if (disabled) {\n      return colors.grey;\n    }\n\n    if (primary) {\n      return colors.primary;\n    }\n\n    if (danger) {\n      return colors.danger;\n    }\n\n    if (secondary) {\n      return colors.secondary;\n    }\n  };\n\n  return _jsx(TouchableOpacity, {\n    disabled: disabled,\n    onPress: onPress,\n    style: [styles.wrapper, {\n      backgroundColor: getBgColor()\n    }, style],\n    children: _jsxs(View, {\n      style: [styles.loaderSection],\n      children: [loading && _jsx(ActivityIndicator, {\n        color: primary ? colors.secondary : colors.primary\n      }), title && _jsx(Text, {\n        style: {\n          color: disabled ? 'black' : colors.white,\n          paddingLeft: loading ? 5 : 0\n        },\n        children: loading ? 'Please wait...' : title\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    height: 42,\n    paddingHorizontal: 5,\n    marginVertical: 5,\n    borderRadius: 4,\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  loaderSection: {\n    flexDirection: 'row'\n  },\n  textInput: {\n    flex: 1,\n    width: '100%'\n  },\n  error: {\n    color: colors.danger,\n    paddingTop: 4,\n    fontSize: 12\n  }\n});\nexport default CustomButton;","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/components/CustomButton.js"],"names":["React","TouchableOpacity","colors","CustomButton","title","secondary","primary","danger","disabled","loading","onPress","style","getBgColor","grey","styles","wrapper","backgroundColor","loaderSection","color","white","paddingLeft","StyleSheet","create","height","paddingHorizontal","marginVertical","borderRadius","alignItems","justifyContent","flexDirection","textInput","flex","width","error","paddingTop","fontSize"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAAQC,gBAAR,QAA+B,8BAA/B;AACA,OAAOC,MAAP;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OASf;AAAA,MARJC,KAQI,QARJA,KAQI;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,OAMI,QANJA,OAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,KACI,QADJA,KACI;;AACJ,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIJ,QAAJ,EAAc;AACZ,aAAON,MAAM,CAACW,IAAd;AACD;;AACD,QAAIP,OAAJ,EAAa;AACX,aAAOJ,MAAM,CAACI,OAAd;AACD;;AACD,QAAIC,MAAJ,EAAY;AACV,aAAOL,MAAM,CAACK,MAAd;AACD;;AAED,QAAIF,SAAJ,EAAe;AACb,aAAOH,MAAM,CAACG,SAAd;AACD;AACF,GAdD;;AAeA,SACE,KAAC,gBAAD;AACE,IAAA,QAAQ,EAAEG,QADZ;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,KAAK,EAAE,CAACI,MAAM,CAACC,OAAR,EAAiB;AAACC,MAAAA,eAAe,EAAEJ,UAAU;AAA5B,KAAjB,EAAkDD,KAAlD,CAHT;AAAA,cAIE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACG,MAAM,CAACG,aAAR,CAAb;AAAA,iBACGR,OAAO,IACN,KAAC,iBAAD;AACE,QAAA,KAAK,EAAEH,OAAO,GAAGJ,MAAM,CAACG,SAAV,GAAsBH,MAAM,CAACI;AAD7C,QAFJ,EAMGF,KAAK,IACJ,KAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLc,UAAAA,KAAK,EAAEV,QAAQ,GAAG,OAAH,GAAaN,MAAM,CAACiB,KAD9B;AAELC,UAAAA,WAAW,EAAEX,OAAO,GAAG,CAAH,GAAO;AAFtB,SADT;AAAA,kBAKGA,OAAO,GAAG,gBAAH,GAAsBL;AALhC,QAPJ;AAAA;AAJF,IADF;AAuBD,CAhDD;;AAkDA,IAAMU,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,OAAO,EAAE;AACLQ,IAAAA,MAAM,EAAE,EADH;AAGLC,IAAAA,iBAAiB,EAAE,CAHd;AAKLC,IAAAA,cAAc,EAAE,CALX;AAMLC,IAAAA,YAAY,EAAE,CANT;AAOLC,IAAAA,UAAU,EAAE,QAPP;AAQLC,IAAAA,cAAc,EAAE;AARX,GADoB;AAY3BX,EAAAA,aAAa,EAAE;AACbY,IAAAA,aAAa,EAAE;AADF,GAZY;AAgB3BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,KAAK,EAAE;AAFE,GAhBgB;AAqB3BC,EAAAA,KAAK,EAAE;AACLf,IAAAA,KAAK,EAAEhB,MAAM,CAACK,MADT;AAEL2B,IAAAA,UAAU,EAAE,CAFP;AAGLC,IAAAA,QAAQ,EAAE;AAHL;AArBoB,CAAlB,CAAf;AA6BA,eAAehC,YAAf","sourcesContent":["import React from 'react';\nimport {View, Text, TextInput, ActivityIndicator, StyleSheet} from 'react-native';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport colors from '../styles/colors';\n\n\nconst CustomButton = ({\n  title,\n  secondary,\n  primary,\n  danger,\n  disabled,\n  loading,\n  onPress,\n  style,\n}) => {\n  const getBgColor = () => {\n    if (disabled) {\n      return colors.grey;\n    }\n    if (primary) {\n      return colors.primary;\n    }\n    if (danger) {\n      return colors.danger;\n    }\n\n    if (secondary) {\n      return colors.secondary;\n    }\n  };\n  return (\n    <TouchableOpacity\n      disabled={disabled}\n      onPress={onPress}\n      style={[styles.wrapper, {backgroundColor: getBgColor()}, style]}>\n      <View style={[styles.loaderSection]}>\n        {loading && (\n          <ActivityIndicator\n            color={primary ? colors.secondary : colors.primary}\n          />\n        )}\n        {title && (\n          <Text\n            style={{\n              color: disabled ? 'black' : colors.white,\n              paddingLeft: loading ? 5 : 0,\n            }}>\n            {loading ? 'Please wait...' : title}\n          </Text>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        height: 42,\n    \n        paddingHorizontal: 5,\n    \n        marginVertical: 5,\n        borderRadius: 4,\n        alignItems: 'center',\n        justifyContent: 'space-evenly',\n      },\n    \n      loaderSection: {\n        flexDirection: 'row',\n      },\n    \n      textInput: {\n        flex: 1,\n        width: '100%',\n      },\n    \n      error: {\n        color: colors.danger,\n        paddingTop: 4,\n        fontSize: 12,\n      },\n})\n\n\nexport default CustomButton;"]},"metadata":{},"sourceType":"module"}