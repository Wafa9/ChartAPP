{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport isFunction from 'lodash/isFunction';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { isToday } from \"../../dateutils\";\nimport { RESERVATION_DATE } from \"../../testIDs\";\nimport styleConstructor from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Reservation = function (_Component) {\n  _inherits(Reservation, _Component);\n\n  var _super = _createSuper(Reservation);\n\n  function Reservation(props) {\n    var _this;\n\n    _classCallCheck(this, Reservation);\n\n    _this = _super.call(this, props);\n    _this.style = styleConstructor(props.theme);\n    return _this;\n  }\n\n  _createClass(Reservation, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var d1 = this.props.date;\n      var d2 = nextProps.date;\n      var r1 = this.props.item;\n      var r2 = nextProps.item;\n      var changed = true;\n\n      if (!d1 && !d2) {\n        changed = false;\n      } else if (d1 && d2) {\n        if (d1.getTime() !== d2.getTime()) {\n          changed = true;\n        } else if (!r1 && !r2) {\n          changed = false;\n        } else if (r1 && r2) {\n          if (!d1 && !d2 || d1 && d2) {\n            if (isFunction(this.props.rowHasChanged)) {\n              changed = this.props.rowHasChanged(r1, r2);\n            }\n          }\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"renderDate\",\n    value: function renderDate(date, item) {\n      if (isFunction(this.props.renderDay)) {\n        return this.props.renderDay(date, item);\n      }\n\n      var today = date && isToday(date) ? this.style.today : undefined;\n      var dayNames = XDate.locales[XDate.defaultLocale].dayNamesShort;\n\n      if (date) {\n        return _jsxs(View, {\n          style: this.style.day,\n          testID: RESERVATION_DATE,\n          children: [_jsx(Text, {\n            allowFontScaling: false,\n            style: [this.style.dayNum, today],\n            children: date.getDate()\n          }), _jsx(Text, {\n            allowFontScaling: false,\n            style: [this.style.dayText, today],\n            children: dayNames ? dayNames[date.getDay()] : undefined\n          })]\n        });\n      } else {\n        return _jsx(View, {\n          style: this.style.day\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          item = _this$props.item,\n          date = _this$props.date;\n      var content;\n\n      if (item) {\n        var firstItem = date ? true : false;\n\n        if (isFunction(this.props.renderItem)) {\n          content = this.props.renderItem(item, firstItem);\n        }\n      } else if (isFunction(this.props.renderEmptyDate)) {\n        content = this.props.renderEmptyDate(date);\n      }\n\n      return _jsxs(View, {\n        style: this.style.container,\n        children: [this.renderDate(date, item), _jsx(View, {\n          style: this.style.innerContainer,\n          children: content\n        })]\n      });\n    }\n  }]);\n\n  return Reservation;\n}(Component);\n\nReservation.displayName = 'Reservation';\nReservation.propTypes = {\n  date: PropTypes.any,\n  item: PropTypes.any,\n  theme: PropTypes.object,\n  rowHasChanged: PropTypes.func,\n  renderDay: PropTypes.func,\n  renderItem: PropTypes.func,\n  renderEmptyDate: PropTypes.func\n};\nexport default Reservation;","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js"],"names":["isFunction","PropTypes","XDate","React","Component","isToday","RESERVATION_DATE","styleConstructor","Reservation","props","style","theme","nextProps","d1","date","d2","r1","item","r2","changed","getTime","rowHasChanged","renderDay","today","undefined","dayNames","locales","defaultLocale","dayNamesShort","day","dayNum","getDate","dayText","getDay","content","firstItem","renderItem","renderEmptyDate","container","renderDate","innerContainer","displayName","propTypes","any","object","func"],"mappings":"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","sourcesContent":["import isFunction from 'lodash/isFunction';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { View, Text } from 'react-native';\nimport { isToday } from '../../dateutils';\n// @ts-expect-error\nimport { RESERVATION_DATE } from '../../testIDs';\nimport styleConstructor from './style';\nclass Reservation extends Component {\n    static displayName = 'Reservation';\n    static propTypes = {\n        date: PropTypes.any,\n        item: PropTypes.any,\n        /** Specify theme properties to override specific styles for item's parts. Default = {} */\n        theme: PropTypes.object,\n        /** specify your item comparison function for increased performance */\n        rowHasChanged: PropTypes.func,\n        /** specify how each date should be rendered. day can be undefined if the item is not first in that day */\n        renderDay: PropTypes.func,\n        /** specify how each item should be rendered in agenda */\n        renderItem: PropTypes.func,\n        /** specify how empty date content with no items should be rendered */\n        renderEmptyDate: PropTypes.func\n    };\n    style;\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n    }\n    shouldComponentUpdate(nextProps) {\n        const d1 = this.props.date;\n        const d2 = nextProps.date;\n        const r1 = this.props.item;\n        const r2 = nextProps.item;\n        let changed = true;\n        if (!d1 && !d2) {\n            changed = false;\n        }\n        else if (d1 && d2) {\n            if (d1.getTime() !== d2.getTime()) {\n                changed = true;\n            }\n            else if (!r1 && !r2) {\n                changed = false;\n            }\n            else if (r1 && r2) {\n                if ((!d1 && !d2) || (d1 && d2)) {\n                    if (isFunction(this.props.rowHasChanged)) {\n                        changed = this.props.rowHasChanged(r1, r2);\n                    }\n                }\n            }\n        }\n        return changed;\n    }\n    renderDate(date, item) {\n        if (isFunction(this.props.renderDay)) {\n            return this.props.renderDay(date, item);\n        }\n        const today = date && isToday(date) ? this.style.today : undefined;\n        const dayNames = XDate.locales[XDate.defaultLocale].dayNamesShort;\n        if (date) {\n            return (<View style={this.style.day} testID={RESERVATION_DATE}>\n          <Text allowFontScaling={false} style={[this.style.dayNum, today]}>\n            {date.getDate()}\n          </Text>\n          <Text allowFontScaling={false} style={[this.style.dayText, today]}>\n            {dayNames ? dayNames[date.getDay()] : undefined}\n          </Text>\n        </View>);\n        }\n        else {\n            return <View style={this.style.day}/>;\n        }\n    }\n    render() {\n        const { item, date } = this.props;\n        let content;\n        if (item) {\n            const firstItem = date ? true : false;\n            if (isFunction(this.props.renderItem)) {\n                content = this.props.renderItem(item, firstItem);\n            }\n        }\n        else if (isFunction(this.props.renderEmptyDate)) {\n            content = this.props.renderEmptyDate(date);\n        }\n        return (<View style={this.style.container}>\n        {this.renderDate(date, item)}\n        <View style={this.style.innerContainer}>{content}</View>\n      </View>);\n    }\n}\nexport default Reservation;\n"]},"metadata":{},"sourceType":"module"}