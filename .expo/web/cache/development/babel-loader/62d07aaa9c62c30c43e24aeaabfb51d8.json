{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { useState } from \"react\";\nimport globalStyles from \"../../styles/global\";\nimport globalText from \"../../styles/globalText\";\nimport Spacer from \"../../components/Spacer\";\nimport { WP } from \"../../utils/resources\";\nimport { COLORS } from \"../../styles/theme\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport axiosInstance from \"../../helpers/axiosInterceptor\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar RegisterScreen = function RegisterScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var onRegister = function onRegister() {\n    if (email != \"\" && password != \"\") {\n      axiosInstance.post('auth/register/', {\n        email: email,\n        username: username,\n        password: password\n      }).then(function (resp) {\n        console.log('json start');\n        console.log(resp);\n        return resp.json();\n      }).then(function (data) {\n        console.log('json two');\n        console.log(data);\n      }).catch(function (error) {\n        console.log(\"error\");\n      });\n    } else {\n      Alert.alert(\"Fiance\", \"Email and Password is required !\");\n    }\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(ScrollView, {\n      style: globalStyles.container,\n      children: [_jsx(StatusBar, {\n        barStyle: \"dark-content\",\n        backgroundColor: \"white\"\n      }), _jsxs(View, {\n        style: globalStyles.subContainer,\n        children: [_jsx(Spacer, {\n          vertical: WP(\"5%\")\n        }), _jsx(Text, {\n          style: _objectSpread(_objectSpread({}, globalText.h1), {}, {\n            alignSelf: \"center\"\n          }),\n          children: \"Sign Up\"\n        }), _jsx(Spacer, {\n          vertical: WP(\"5%\")\n        }), _jsx(Input, {\n          placeholder: \"Enter your name\",\n          value: username,\n          label: \"username\",\n          icon: \"account-box\",\n          onChangeText: function onChangeText(text) {\n            setName(text);\n          }\n        }), _jsx(Spacer, {\n          vertical: WP(\"3%\")\n        }), _jsx(Input, {\n          placeholder: \"Enter your email\",\n          value: email,\n          label: \"email\",\n          icon: \"email\",\n          onChangeText: function onChangeText(text) {\n            setEmail(text);\n          }\n        }), _jsx(Spacer, {\n          vertical: WP(\"3%\")\n        }), _jsx(Input, {\n          placeholder: \"Enter your password\",\n          value: password,\n          label: \"password\",\n          icon: \"lock\",\n          onChangeText: function onChangeText(text) {\n            setPassword(text);\n          }\n        }), _jsx(Spacer, {\n          vertical: WP(\"5%\")\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            onRegister();\n          },\n          title: \"Register\"\n        })]\n      })]\n    }), _jsx(View, {\n      style: globalStyles.absoluteText,\n      children: _jsx(Text, {\n        style: globalText.labelText,\n        children: \"Already have an account? \"\n      })\n    }), _jsx(Button, {\n      absolute: true,\n      onPress: function onPress() {\n        props.navigation.navigate(\"Login\");\n      },\n      title: \"Login\"\n    })]\n  });\n};\n\nexport default RegisterScreen;","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/screens/Auth/RegisterScreen.js"],"names":["React","useState","globalStyles","globalText","Spacer","WP","COLORS","Input","Button","axiosInstance","RegisterScreen","props","username","setName","email","setEmail","password","setPassword","onRegister","post","then","resp","console","log","json","data","catch","error","Alert","alert","container","subContainer","h1","alignSelf","text","absoluteText","labelText","navigation","navigate"],"mappings":"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","sourcesContent":["import {\r\n  View,\r\n  Text,\r\n  StatusBar,\r\n  ScrollView,\r\n  TextInput,\r\n  Alert,\r\n} from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport globalStyles from \"../../styles/global\";\r\nimport globalText from \"../../styles/globalText\";\r\nimport Spacer from \"../../components/Spacer\";\r\nimport { WP } from \"../../utils/resources\";\r\nimport { COLORS } from \"../../styles/theme\";\r\nimport Input from \"../../components/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport axiosInstance from \"../../helpers/axiosInterceptor\";\r\n\r\nconst RegisterScreen = (props) => {\r\n  const [username, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const onRegister = () => {\r\n    if (email != \"\" && password != \"\") {\r\n      axiosInstance\r\n      .post('auth/register/', {\r\n        email,\r\n        username,\r\n        password,\r\n        \r\n      })\r\n      .then((resp) => {\r\n        console.log('json start')\r\n        console.log(resp)\r\n        return resp.json()})\r\n      .then((data) =>{\r\n        console.log('json two')\r\n        console.log(data)\r\n      })\r\n      .catch((error) => {console.log(\"error\")})\r\n    } else {\r\n      Alert.alert(\"Fiance\", \"Email and Password is required !\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <ScrollView style={globalStyles.container}>\r\n        <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\r\n        <View style={globalStyles.subContainer}>\r\n          <Spacer vertical={WP(\"5%\")} />\r\n          <Text style={{ ...globalText.h1, alignSelf: \"center\" }}>Sign Up</Text>\r\n          <Spacer vertical={WP(\"5%\")} />\r\n          <Input\r\n            placeholder=\"Enter your name\"\r\n            value={username}\r\n            label=\"username\"\r\n            icon=\"account-box\"\r\n            onChangeText={(text) => {\r\n              setName(text);\r\n            }}\r\n          />\r\n          <Spacer vertical={WP(\"3%\")} />\r\n          <Input\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            label=\"email\"\r\n            icon=\"email\"\r\n            onChangeText={(text) => {\r\n              setEmail(text);\r\n            }}\r\n          />\r\n          <Spacer vertical={WP(\"3%\")} />\r\n          <Input\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            label=\"password\"\r\n            icon=\"lock\"\r\n            onChangeText={(text) => {\r\n              setPassword(text);\r\n            }}\r\n          />\r\n          <Spacer vertical={WP(\"5%\")} />\r\n          <Button\r\n            onPress={() => {\r\n              onRegister();\r\n            }}\r\n            title=\"Register\"\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n      <View style={globalStyles.absoluteText}>\r\n        <Text style={globalText.labelText}>Already have an account? </Text>\r\n      </View>\r\n      <Button\r\n        absolute\r\n        onPress={() => {\r\n          props.navigation.navigate(\"Login\");\r\n        }}\r\n        title=\"Login\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n\r\n//\r\n//   const [form, setForm] = useState({});\r\n//   const {navigate} = useNavigation();\r\n//   const [errors, setErrors] = useState({});\r\n//   const {\r\n//     authDispatch,\r\n//     authState: {error, loading, data},\r\n//   } = useContext(GlobalContext);\r\n\r\n//   useFocusEffect(\r\n//     React.useCallback(() => {\r\n//       return () => {\r\n//         if (data || error) {\r\n//           clearAuthState()(authDispatch);\r\n//         }\r\n//       };\r\n//     }, [data, error]),\r\n//   );\r\n\r\n//   const onChange = ({name, value}) => {\r\n//     setForm({...form, [name]: value});\r\n\r\n//     if (value !== '') {\r\n//       if (name === 'password') {\r\n//         if (value.length < 6) {\r\n//           setErrors((prev) => {\r\n//             return {...prev, [name]: 'This field needs min 6 characters'};\r\n//           });\r\n//         } else {\r\n//           setErrors((prev) => {\r\n//             return {...prev, [name]: null};\r\n//           });\r\n//         }\r\n//       } else {\r\n//         setErrors((prev) => {\r\n//           return {...prev, [name]: null};\r\n//         });\r\n//       }\r\n//     } else {\r\n//       setErrors((prev) => {\r\n//         return {...prev, [name]: 'This field is required'};\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const onSubmit = () => {\r\n//     if (!form.userName) {\r\n//       setErrors((prev) => {\r\n//         return {...prev, userName: 'Please add a username'};\r\n//       });\r\n//     }\r\n//     if (!form.firstName) {\r\n//       setErrors((prev) => {\r\n//         return {...prev, firstName: 'Please add a  first name'};\r\n//       });\r\n//     }\r\n//     if (!form.lastName) {\r\n//       setErrors((prev) => {\r\n//         return {...prev, lastName: 'Please add a last name'};\r\n//       });\r\n//     }\r\n//     if (!form.email) {\r\n//       setErrors((prev) => {\r\n//         return {...prev, email: 'Please add a email'};\r\n//       });\r\n//     }\r\n//     if (!form.password) {\r\n//       setErrors((prev) => {\r\n//         return {...prev, password: 'Please add a password'};\r\n//       });\r\n//     }\r\n\r\n//     if (\r\n//       Object.values(form).length === 5 &&\r\n//       Object.values(form).every((item) => item.trim().length > 0) &&\r\n//       Object.values(errors).every((item) => !item)\r\n//     ) {\r\n//       register(form)(authDispatch)((response) => {\r\n//         navigate(LOGIN, {data: response});\r\n//       });\r\n//     }\r\n//   };"]},"metadata":{},"sourceType":"module"}