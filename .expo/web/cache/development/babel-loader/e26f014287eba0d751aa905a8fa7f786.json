{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport React from 'react';\nimport { useCallback } from 'react';\nimport { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport colors from \"../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Message = function Message(_ref) {\n  var message = _ref.message,\n      onDismiss = _ref.onDismiss,\n      retry = _ref.retry,\n      retryFn = _ref.retryFn,\n      primary = _ref.primary,\n      danger = _ref.danger,\n      info = _ref.info,\n      success = _ref.success;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      userDismissed = _React$useState2[0],\n      setDismissed = _React$useState2[1];\n\n  var getBgColor = function getBgColor() {\n    if (primary) {\n      return colors.primary;\n    }\n\n    if (danger) {\n      return colors.danger;\n    }\n\n    if (success) {\n      return colors.success;\n    }\n\n    if (info) {\n      return colors.secondary;\n    }\n  };\n\n  return _jsx(_Fragment, {\n    children: userDismissed ? null : _jsx(TouchableOpacity, {\n      style: [styles.wrapper, {\n        backgroundColor: getBgColor()\n      }],\n      children: _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [_jsx(Text, {\n          style: {\n            color: colors.white\n          },\n          children: message\n        }), retry && typeof onDismiss !== 'function' && _jsx(TouchableOpacity, {\n          onPress: retryFn,\n          children: _jsx(Text, {\n            style: {\n              color: colors.white\n            },\n            children: \"Retry\"\n          })\n        }), typeof onDismiss === 'function' && _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setDismissed(true);\n            onDismiss();\n          },\n          children: _jsx(Text, {\n            style: {\n              color: colors.white\n            },\n            children: \"X\"\n          })\n        })]\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    height: 42,\n    paddingHorizontal: 5,\n    paddingVertical: 13,\n    marginVertical: 5,\n    borderRadius: 4\n  },\n  loaderSection: {\n    flexDirection: 'row'\n  },\n  textInput: {\n    flex: 1,\n    width: '100%'\n  },\n  error: {\n    color: colors.danger,\n    paddingTop: 4,\n    fontSize: 12\n  }\n});\nexport default Message;","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/components/Messege.js"],"names":["useFocusEffect","React","useCallback","useEffect","TouchableOpacity","colors","Message","message","onDismiss","retry","retryFn","primary","danger","info","success","useState","userDismissed","setDismissed","getBgColor","secondary","styles","wrapper","backgroundColor","flexDirection","justifyContent","alignItems","color","white","StyleSheet","create","height","paddingHorizontal","paddingVertical","marginVertical","borderRadius","loaderSection","textInput","flex","width","error","paddingTop","fontSize"],"mappings":"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","sourcesContent":["import {useFocusEffect} from '@react-navigation/native';\nimport React from 'react';\nimport {useCallback} from 'react';\nimport {useEffect} from 'react';\nimport {View, Text, TextInput, ActivityIndicator, StyleSheet} from 'react-native';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport colors from '../styles/colors';\n\n\nconst Message = ({\n  message,\n  onDismiss,\n  retry,\n  retryFn,\n  primary,\n  danger,\n  info,\n  success,\n}) => {\n  const [userDismissed, setDismissed] = React.useState(false);\n\n  const getBgColor = () => {\n    if (primary) {\n      return colors.primary;\n    }\n    if (danger) {\n      return colors.danger;\n    }\n    if (success) {\n      return colors.success;\n    }\n\n    if (info) {\n      return colors.secondary;\n    }\n  };\n  return (\n    <>\n      {userDismissed ? null : (\n        <TouchableOpacity\n          style={[styles.wrapper, {backgroundColor: getBgColor()}]}>\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}>\n            <Text\n              style={{\n                color: colors.white,\n              }}>\n              {message}\n            </Text>\n\n            {retry && typeof onDismiss !== 'function' && (\n              <TouchableOpacity onPress={retryFn}>\n                <Text\n                  style={{\n                    color: colors.white,\n                  }}>\n                  Retry\n                </Text>\n              </TouchableOpacity>\n            )}\n\n            {typeof onDismiss === 'function' && (\n              <TouchableOpacity\n                onPress={() => {\n                  setDismissed(true);\n                  onDismiss();\n                }}>\n                <Text\n                  style={{\n                    color: colors.white,\n                  }}>\n                  X\n                </Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        </TouchableOpacity>\n      )}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        height: 42,\n    \n        paddingHorizontal: 5,\n    \n        paddingVertical: 13,\n    \n        marginVertical: 5,\n        borderRadius: 4,\n        // alignItems: 'center',\n        // justifyContent: 'space-evenly',\n      },\n    \n      loaderSection: {\n        flexDirection: 'row',\n      },\n    \n      textInput: {\n        flex: 1,\n        width: '100%',\n      },\n    \n      error: {\n        color: colors.danger,\n        paddingTop: 4,\n        fontSize: 12,\n      },\n})\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}