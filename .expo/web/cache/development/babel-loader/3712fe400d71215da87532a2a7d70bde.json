{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport includes from 'lodash/includes';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport XDate from 'xdate';\nimport React, { Component, Fragment } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { shouldUpdate } from \"../../componentUpdater\";\nimport { formatNumbers, weekDayNames } from \"../../dateutils\";\nimport { CHANGE_MONTH_LEFT_ARROW, CHANGE_MONTH_RIGHT_ARROW, HEADER_DAY_NAMES, HEADER_LOADING_INDICATOR, HEADER_MONTH_NAME } from \"../../testIDs\";\nimport styleConstructor from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CalendarHeader = function (_Component) {\n  _inherits(CalendarHeader, _Component);\n\n  var _super = _createSuper(CalendarHeader);\n\n  function CalendarHeader(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarHeader);\n\n    _this = _super.call(this, props);\n\n    _this.addMonth = function () {\n      var addMonth = _this.props.addMonth;\n      addMonth == null ? void 0 : addMonth(1);\n    };\n\n    _this.subtractMonth = function () {\n      var addMonth = _this.props.addMonth;\n      addMonth == null ? void 0 : addMonth(-1);\n    };\n\n    _this.onPressLeft = function () {\n      var _this$props = _this.props,\n          onPressArrowLeft = _this$props.onPressArrowLeft,\n          month = _this$props.month;\n\n      if (typeof onPressArrowLeft === 'function') {\n        return onPressArrowLeft(_this.subtractMonth, month);\n      }\n\n      return _this.subtractMonth();\n    };\n\n    _this.onPressRight = function () {\n      var _this$props2 = _this.props,\n          onPressArrowRight = _this$props2.onPressArrowRight,\n          month = _this$props2.month;\n\n      if (typeof onPressArrowRight === 'function') {\n        return onPressArrowRight(_this.addMonth, month);\n      }\n\n      return _this.addMonth();\n    };\n\n    _this.renderWeekDays = memoize(function (weekDaysNames) {\n      var disabledDaysIndexes = _this.props.disabledDaysIndexes;\n      return weekDaysNames.map(function (day, idx) {\n        var dayStyle = [_this.style.dayHeader];\n\n        if (includes(disabledDaysIndexes, idx)) {\n          dayStyle.push(_this.style.disabledDayHeader);\n        }\n\n        if (_this.style[\"dayTextAtIndex\" + idx]) {\n          dayStyle.push(_this.style[\"dayTextAtIndex\" + idx]);\n        }\n\n        return _jsx(Text, {\n          allowFontScaling: false,\n          style: dayStyle,\n          numberOfLines: 1,\n          accessibilityLabel: '',\n          children: day\n        }, idx);\n      });\n    });\n\n    _this.renderHeader = function () {\n      var _this$props3 = _this.props,\n          customHeaderTitle = _this$props3.customHeaderTitle,\n          renderHeader = _this$props3.renderHeader,\n          month = _this$props3.month,\n          monthFormat = _this$props3.monthFormat,\n          testID = _this$props3.testID,\n          webAriaLevel = _this$props3.webAriaLevel;\n      var webProps = Platform.OS === 'web' ? {\n        'aria-level': webAriaLevel\n      } : {};\n\n      if (renderHeader) {\n        return renderHeader(month);\n      }\n\n      if (customHeaderTitle) {\n        return customHeaderTitle;\n      }\n\n      return _jsx(Fragment, {\n        children: _jsx(Text, _objectSpread(_objectSpread({\n          allowFontScaling: false,\n          style: _this.style.monthText,\n          testID: testID ? HEADER_MONTH_NAME + \"-\" + testID : HEADER_MONTH_NAME\n        }, webProps), {}, {\n          children: formatNumbers(month == null ? void 0 : month.toString(monthFormat))\n        }))\n      });\n    };\n\n    _this.onAccessibilityAction = function (event) {\n      switch (event.nativeEvent.actionName) {\n        case 'decrement':\n          _this.onPressLeft();\n\n          break;\n\n        case 'increment':\n          _this.onPressRight();\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.style = styleConstructor(props.theme);\n    return _this;\n  }\n\n  _createClass(CalendarHeader, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _nextProps$month, _this$props$month;\n\n      if (((_nextProps$month = nextProps.month) == null ? void 0 : _nextProps$month.toString('yyyy MM')) !== ((_this$props$month = this.props.month) == null ? void 0 : _this$props$month.toString('yyyy MM'))) {\n        return true;\n      }\n\n      return shouldUpdate(this.props, nextProps, ['displayLoadingIndicator', 'hideDayNames', 'firstDay', 'showWeekNumbers', 'monthFormat', 'renderArrow', 'disableArrowLeft', 'disableArrowRight', 'renderHeader', 'customHeaderTitle']);\n    }\n  }, {\n    key: \"renderArrow\",\n    value: function renderArrow(direction) {\n      var _this$props4 = this.props,\n          hideArrows = _this$props4.hideArrows,\n          disableArrowLeft = _this$props4.disableArrowLeft,\n          disableArrowRight = _this$props4.disableArrowRight,\n          renderArrow = _this$props4.renderArrow,\n          testID = _this$props4.testID;\n\n      if (hideArrows) {\n        return _jsx(View, {});\n      }\n\n      var isLeft = direction === 'left';\n      var id = isLeft ? CHANGE_MONTH_LEFT_ARROW : CHANGE_MONTH_RIGHT_ARROW;\n      var testId = testID ? id + \"-\" + testID : id;\n      var onPress = isLeft ? this.onPressLeft : this.onPressRight;\n      var imageSource = isLeft ? require(\"../img/previous.png\") : require(\"../img/next.png\");\n      var renderArrowDirection = isLeft ? 'left' : 'right';\n      var shouldDisable = isLeft ? disableArrowLeft : disableArrowRight;\n      return _jsx(TouchableOpacity, {\n        onPress: !shouldDisable ? onPress : undefined,\n        disabled: shouldDisable,\n        style: this.style.arrow,\n        hitSlop: {\n          left: 20,\n          right: 20,\n          top: 20,\n          bottom: 20\n        },\n        testID: testId,\n        children: renderArrow ? renderArrow(renderArrowDirection) : _jsx(Image, {\n          source: imageSource,\n          style: shouldDisable ? this.style.disabledArrowImage : this.style.arrowImage\n        })\n      });\n    }\n  }, {\n    key: \"renderIndicator\",\n    value: function renderIndicator() {\n      var _this$props5 = this.props,\n          displayLoadingIndicator = _this$props5.displayLoadingIndicator,\n          theme = _this$props5.theme,\n          testID = _this$props5.testID;\n\n      if (displayLoadingIndicator) {\n        return _jsx(ActivityIndicator, {\n          color: theme == null ? void 0 : theme.indicatorColor,\n          testID: testID ? HEADER_LOADING_INDICATOR + \"-\" + testID : HEADER_LOADING_INDICATOR\n        });\n      }\n    }\n  }, {\n    key: \"renderDayNames\",\n    value: function renderDayNames() {\n      var _this$props6 = this.props,\n          firstDay = _this$props6.firstDay,\n          hideDayNames = _this$props6.hideDayNames,\n          showWeekNumbers = _this$props6.showWeekNumbers,\n          testID = _this$props6.testID;\n      var weekDaysNames = weekDayNames(firstDay);\n\n      if (!hideDayNames) {\n        return _jsxs(View, {\n          style: this.style.week,\n          testID: testID ? HEADER_DAY_NAMES + \"-\" + testID : HEADER_DAY_NAMES,\n          children: [showWeekNumbers && _jsx(Text, {\n            allowFontScaling: false,\n            style: this.style.dayHeader\n          }), this.renderWeekDays(weekDaysNames)]\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          style = _this$props7.style,\n          testID = _this$props7.testID;\n      return _jsxs(View, {\n        testID: testID,\n        style: style,\n        accessible: true,\n        accessibilityRole: 'adjustable',\n        accessibilityActions: [{\n          name: 'increment',\n          label: 'increment'\n        }, {\n          name: 'decrement',\n          label: 'decrement'\n        }],\n        onAccessibilityAction: this.onAccessibilityAction,\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        importantForAccessibility: this.props.importantForAccessibility,\n        children: [_jsxs(View, {\n          style: this.style.header,\n          children: [this.renderArrow('left'), _jsxs(View, {\n            style: this.style.headerContainer,\n            children: [this.renderHeader(), this.renderIndicator()]\n          }), this.renderArrow('right')]\n        }), this.renderDayNames()]\n      });\n    }\n  }]);\n\n  return CalendarHeader;\n}(Component);\n\nCalendarHeader.displayName = 'CalendarHeader';\nCalendarHeader.propTypes = {\n  theme: PropTypes.object,\n  firstDay: PropTypes.number,\n  displayLoadingIndicator: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  month: PropTypes.instanceOf(XDate),\n  addMonth: PropTypes.func,\n  monthFormat: PropTypes.string,\n  hideDayNames: PropTypes.bool,\n  hideArrows: PropTypes.bool,\n  renderArrow: PropTypes.func,\n  onPressArrowLeft: PropTypes.func,\n  onPressArrowRight: PropTypes.func,\n  disableArrowLeft: PropTypes.bool,\n  disableArrowRight: PropTypes.bool,\n  disabledDaysIndexes: PropTypes.arrayOf(PropTypes.number),\n  renderHeader: PropTypes.any,\n  customHeaderTitle: PropTypes.any,\n  webAriaLevel: PropTypes.number\n};\nCalendarHeader.defaultProps = {\n  monthFormat: 'MMMM yyyy',\n  webAriaLevel: 1\n};\nexport default CalendarHeader;","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/node_modules/react-native-calendars/src/calendar/header/index.js"],"names":["includes","PropTypes","memoize","XDate","React","Component","Fragment","shouldUpdate","formatNumbers","weekDayNames","CHANGE_MONTH_LEFT_ARROW","CHANGE_MONTH_RIGHT_ARROW","HEADER_DAY_NAMES","HEADER_LOADING_INDICATOR","HEADER_MONTH_NAME","styleConstructor","CalendarHeader","props","addMonth","subtractMonth","onPressLeft","onPressArrowLeft","month","onPressRight","onPressArrowRight","renderWeekDays","weekDaysNames","disabledDaysIndexes","map","day","idx","dayStyle","style","dayHeader","push","disabledDayHeader","renderHeader","customHeaderTitle","monthFormat","testID","webAriaLevel","webProps","Platform","OS","monthText","toString","onAccessibilityAction","event","nativeEvent","actionName","theme","nextProps","direction","hideArrows","disableArrowLeft","disableArrowRight","renderArrow","isLeft","id","testId","onPress","imageSource","require","renderArrowDirection","shouldDisable","undefined","arrow","left","right","top","bottom","disabledArrowImage","arrowImage","displayLoadingIndicator","indicatorColor","firstDay","hideDayNames","showWeekNumbers","week","name","label","accessibilityElementsHidden","importantForAccessibility","header","headerContainer","renderIndicator","renderDayNames","displayName","propTypes","object","number","bool","instanceOf","func","string","arrayOf","any","defaultProps"],"mappings":"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","sourcesContent":["import includes from 'lodash/includes';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport XDate from 'xdate';\nimport React, { Component, Fragment } from 'react';\nimport { ActivityIndicator, Platform, View, Text, TouchableOpacity, Image } from 'react-native';\nimport { shouldUpdate } from '../../componentUpdater';\nimport { formatNumbers, weekDayNames } from '../../dateutils';\nimport { CHANGE_MONTH_LEFT_ARROW, CHANGE_MONTH_RIGHT_ARROW, HEADER_DAY_NAMES, HEADER_LOADING_INDICATOR, HEADER_MONTH_NAME\n// @ts-expect-error\n } from '../../testIDs';\nimport styleConstructor from './style';\nclass CalendarHeader extends Component {\n    static displayName = 'CalendarHeader';\n    static propTypes = {\n        theme: PropTypes.object,\n        firstDay: PropTypes.number,\n        displayLoadingIndicator: PropTypes.bool,\n        showWeekNumbers: PropTypes.bool,\n        month: PropTypes.instanceOf(XDate),\n        addMonth: PropTypes.func,\n        /** Month format in the title. Formatting values: http://arshaw.com/xdate/#Formatting */\n        monthFormat: PropTypes.string,\n        /**  Hide day names. Default = false */\n        hideDayNames: PropTypes.bool,\n        /** Hide month navigation arrows. Default = false */\n        hideArrows: PropTypes.bool,\n        /** Replace default arrows with custom ones (direction can be 'left' or 'right') */\n        renderArrow: PropTypes.func,\n        /** Handler which gets executed when press arrow icon left. It receive a callback can go back month */\n        onPressArrowLeft: PropTypes.func,\n        /** Handler which gets executed when press arrow icon right. It receive a callback can go next month */\n        onPressArrowRight: PropTypes.func,\n        /** Disable left arrow. Default = false */\n        disableArrowLeft: PropTypes.bool,\n        /** Disable right arrow. Default = false */\n        disableArrowRight: PropTypes.bool,\n        /** Apply custom disable color to selected day indexes */\n        disabledDaysIndexes: PropTypes.arrayOf(PropTypes.number),\n        /** Replace default title with custom one. the function receive a date as parameter */\n        renderHeader: PropTypes.any,\n        /** Replace default title with custom element */\n        customHeaderTitle: PropTypes.any,\n        /** Provide aria-level for calendar heading for proper accessibility when used with web (react-native-web) */\n        webAriaLevel: PropTypes.number\n    };\n    static defaultProps = {\n        monthFormat: 'MMMM yyyy',\n        webAriaLevel: 1\n    };\n    style;\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n    }\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.month?.toString('yyyy MM') !== this.props.month?.toString('yyyy MM')) {\n            return true;\n        }\n        return shouldUpdate(this.props, nextProps, [\n            'displayLoadingIndicator',\n            'hideDayNames',\n            'firstDay',\n            'showWeekNumbers',\n            'monthFormat',\n            'renderArrow',\n            'disableArrowLeft',\n            'disableArrowRight',\n            'renderHeader',\n            'customHeaderTitle'\n        ]);\n    }\n    addMonth = () => {\n        const { addMonth } = this.props;\n        addMonth?.(1);\n    };\n    subtractMonth = () => {\n        const { addMonth } = this.props;\n        addMonth?.(-1);\n    };\n    onPressLeft = () => {\n        const { onPressArrowLeft, month } = this.props;\n        if (typeof onPressArrowLeft === 'function') {\n            return onPressArrowLeft(this.subtractMonth, month);\n        }\n        return this.subtractMonth();\n    };\n    onPressRight = () => {\n        const { onPressArrowRight, month } = this.props;\n        if (typeof onPressArrowRight === 'function') {\n            return onPressArrowRight(this.addMonth, month);\n        }\n        return this.addMonth();\n    };\n    renderWeekDays = memoize(weekDaysNames => {\n        const { disabledDaysIndexes } = this.props;\n        return weekDaysNames.map((day, idx) => {\n            const dayStyle = [this.style.dayHeader];\n            if (includes(disabledDaysIndexes, idx)) {\n                dayStyle.push(this.style.disabledDayHeader);\n            }\n            if (this.style[`dayTextAtIndex${idx}`]) {\n                dayStyle.push(this.style[`dayTextAtIndex${idx}`]);\n            }\n            return (<Text allowFontScaling={false} key={idx} style={dayStyle} numberOfLines={1} accessibilityLabel={''}>\n          {day}\n        </Text>);\n        });\n    });\n    renderHeader = () => {\n        const { customHeaderTitle, renderHeader, month, monthFormat, testID, webAriaLevel } = this.props;\n        const webProps = Platform.OS === 'web' ? { 'aria-level': webAriaLevel } : {};\n        if (renderHeader) {\n            return renderHeader(month);\n        }\n        if (customHeaderTitle) {\n            return customHeaderTitle;\n        }\n        return (<Fragment>\n        <Text allowFontScaling={false} style={this.style.monthText} testID={testID ? `${HEADER_MONTH_NAME}-${testID}` : HEADER_MONTH_NAME} {...webProps}>\n          {formatNumbers(month?.toString(monthFormat))}\n        </Text>\n      </Fragment>);\n    };\n    renderArrow(direction) {\n        const { hideArrows, disableArrowLeft, disableArrowRight, renderArrow, testID } = this.props;\n        if (hideArrows) {\n            return <View />;\n        }\n        const isLeft = direction === 'left';\n        const id = isLeft ? CHANGE_MONTH_LEFT_ARROW : CHANGE_MONTH_RIGHT_ARROW;\n        const testId = testID ? `${id}-${testID}` : id;\n        const onPress = isLeft ? this.onPressLeft : this.onPressRight;\n        const imageSource = isLeft ? require('../img/previous.png') : require('../img/next.png');\n        const renderArrowDirection = isLeft ? 'left' : 'right';\n        const shouldDisable = isLeft ? disableArrowLeft : disableArrowRight;\n        return (<TouchableOpacity onPress={!shouldDisable ? onPress : undefined} disabled={shouldDisable} style={this.style.arrow} hitSlop={{ left: 20, right: 20, top: 20, bottom: 20 }} testID={testId}>\n        {renderArrow ? (renderArrow(renderArrowDirection)) : (<Image source={imageSource} style={shouldDisable ? this.style.disabledArrowImage : this.style.arrowImage}/>)}\n      </TouchableOpacity>);\n    }\n    renderIndicator() {\n        const { displayLoadingIndicator, theme, testID } = this.props;\n        if (displayLoadingIndicator) {\n            return (<ActivityIndicator color={theme?.indicatorColor} testID={testID ? `${HEADER_LOADING_INDICATOR}-${testID}` : HEADER_LOADING_INDICATOR}/>);\n        }\n    }\n    renderDayNames() {\n        const { firstDay, hideDayNames, showWeekNumbers, testID } = this.props;\n        const weekDaysNames = weekDayNames(firstDay);\n        if (!hideDayNames) {\n            return (<View style={this.style.week} testID={testID ? `${HEADER_DAY_NAMES}-${testID}` : HEADER_DAY_NAMES}>\n          {showWeekNumbers && <Text allowFontScaling={false} style={this.style.dayHeader}></Text>}\n          {this.renderWeekDays(weekDaysNames)}\n        </View>);\n        }\n    }\n    render() {\n        const { style, testID } = this.props;\n        return (<View testID={testID} style={style} accessible accessibilityRole={'adjustable'} accessibilityActions={[\n                { name: 'increment', label: 'increment' },\n                { name: 'decrement', label: 'decrement' }\n            ]} onAccessibilityAction={this.onAccessibilityAction} accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n         importantForAccessibility={this.props.importantForAccessibility} // Android\n        >\n        <View style={this.style.header}>\n          {this.renderArrow('left')}\n          <View style={this.style.headerContainer}>\n            {this.renderHeader()}\n            {this.renderIndicator()}\n          </View>\n          {this.renderArrow('right')}\n        </View>\n        {this.renderDayNames()}\n      </View>);\n    }\n    onAccessibilityAction = (event) => {\n        switch (event.nativeEvent.actionName) {\n            case 'decrement':\n                this.onPressLeft();\n                break;\n            case 'increment':\n                this.onPressRight();\n                break;\n            default:\n                break;\n        }\n    };\n}\nexport default CalendarHeader;\n"]},"metadata":{},"sourceType":"module"}