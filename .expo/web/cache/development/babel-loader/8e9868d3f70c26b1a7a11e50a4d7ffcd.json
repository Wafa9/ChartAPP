{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useNavigation } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport CustomButton from \"../CustomButton\";\nimport Inputs from \"../Inputs\";\nimport Message from \"../Messege\";\nimport globalStyles from \"../../styles/global\";\nimport globalText from \"../../styles/globalText\";\nimport Button from \"../../components/Button\";\nimport Spacer from \"../../components/Spacer\";\nimport { WP } from \"../../utils/resources\";\nimport { COLORS } from \"../../styles/theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar LoginComponent = function LoginComponent(_ref) {\n  var error = _ref.error,\n      form = _ref.form,\n      justSignedUp = _ref.justSignedUp,\n      onChange = _ref.onChange,\n      loading = _ref.loading,\n      onSubmit = _ref.onSubmit;\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSecureEntry = _useState2[0],\n      setIsSecureEntry = _useState2[1];\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(ScrollView, {\n      style: globalStyles.container,\n      children: [_jsx(StatusBar, {\n        barStyle: \"dark-content\",\n        backgroundColor: \"white\"\n      }), _jsxs(View, {\n        style: globalStyles.subContainer,\n        children: [_jsx(Spacer, {\n          vertical: WP(\"5%\")\n        }), _jsx(Text, {\n          style: _objectSpread(_objectSpread({}, globalText.h1), {}, {\n            alignSelf: \"center\"\n          }),\n          children: \"Login\"\n        }), justSignedUp && _jsx(Message, {\n          onDismiss: function onDismiss() {},\n          success: true,\n          message: \"Account created successfully\"\n        }), error && !error.error && _jsx(Message, {\n          onDismiss: function onDismiss() {},\n          danger: true,\n          message: \"invalid credentials\"\n        }), (error == null ? void 0 : error.error) && _jsx(Message, {\n          danger: true,\n          onDismiss: true,\n          message: error == null ? void 0 : error.error\n        }), _jsx(Spacer, {\n          vertical: WP(\"5%\")\n        }), _jsx(Inputs, {\n          label: \"email\",\n          iconPosition: \"right\",\n          placeholder: \"Enter email\",\n          value: form.email || null,\n          onChangeText: function onChangeText(value) {\n            onChange({\n              name: 'email',\n              value: value\n            });\n          }\n        }), _jsx(Spacer, {\n          vertical: WP(\"5%\")\n        }), _jsx(Inputs, {\n          label: \"Password\",\n          placeholder: \"Enter Password\",\n          secureTextEntry: isSecureEntry,\n          icon: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              setIsSecureEntry(function (prev) {\n                return !prev;\n              });\n            },\n            children: _jsx(Text, {\n              children: isSecureEntry ? 'Show' : 'Hide'\n            })\n          }),\n          iconPosition: \"right\",\n          onChangeText: function onChangeText(value) {\n            onChange({\n              name: 'password',\n              value: value\n            });\n          }\n        }), _jsx(Spacer, {\n          vertical: WP(\"5%\")\n        }), _jsx(CustomButton, {\n          disabled: loading,\n          onPress: onSubmit,\n          loading: loading,\n          primary: true,\n          title: \"Submit\"\n        })]\n      })]\n    }), _jsx(View, {\n      style: globalStyles.absoluteText,\n      children: _jsx(Text, {\n        style: globalText.labelText,\n        children: \"Create new account\"\n      })\n    }), _jsx(Button, {\n      absolute: true,\n      onPress: function onPress() {\n        props.navigation.navigate(\"Register\");\n      },\n      title: \"Sign Up\"\n    })]\n  });\n};\n\nexport default LoginComponent;","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/components/login/loginComponent.js"],"names":["useNavigation","React","useState","TouchableOpacity","CustomButton","Inputs","Message","globalStyles","globalText","Button","Spacer","WP","COLORS","LoginComponent","error","form","justSignedUp","onChange","loading","onSubmit","navigate","isSecureEntry","setIsSecureEntry","container","subContainer","h1","alignSelf","email","value","name","prev","absoluteText","labelText","props","navigation"],"mappings":";;;;;;;AAAA,SAAQA,aAAR,QAA4B,0BAA5B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;AAEA,SAAQC,gBAAR,QAA+B,8BAA/B;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,YAAP;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,SAASC,EAAT;AACA,SAASC,MAAT;;;;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAOjB;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,QACI,QADJA,QACI;;AACJ,uBAAmBnB,aAAa,EAAhC;AAAA,MAAOoB,QAAP,kBAAOA,QAAP;;AACA,kBAA0ClB,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,MAAOmB,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,SACE;AAAA,eACA,MAAC,UAAD;AAAY,MAAA,KAAK,EAAEf,YAAY,CAACgB,SAAhC;AAAA,iBACE,KAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,cAApB;AAAmC,QAAA,eAAe,EAAC;AAAnD,QADF,EAEE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,YAAY,CAACiB,YAA1B;AAAA,mBACE,KAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEb,EAAE,CAAC,IAAD;AAApB,UADF,EAEE,KAAC,IAAD;AAAM,UAAA,KAAK,kCAAOH,UAAU,CAACiB,EAAlB;AAAsBC,YAAAA,SAAS,EAAE;AAAjC,YAAX;AAAA;AAAA,UAFF,EAGGV,YAAY,IACT,KAAC,OAAD;AACE,UAAA,SAAS,EAAE,qBAAM,CAAE,CADrB;AAEE,UAAA,OAAO,MAFT;AAGE,UAAA,OAAO,EAAC;AAHV,UAJN,EAUKF,KAAK,IAAI,CAACA,KAAK,CAACA,KAAhB,IACC,KAAC,OAAD;AACE,UAAA,SAAS,EAAE,qBAAM,CAAE,CADrB;AAEE,UAAA,MAAM,MAFR;AAGE,UAAA,OAAO,EAAC;AAHV,UAXN,EAiBK,CAAAA,KAAK,QAAL,YAAAA,KAAK,CAAEA,KAAP,KAAgB,KAAC,OAAD;AAAS,UAAA,MAAM,MAAf;AAAgB,UAAA,SAAS,MAAzB;AAA0B,UAAA,OAAO,EAAEA,KAAF,oBAAEA,KAAK,CAAEA;AAA1C,UAjBrB,EAkBE,KAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEH,EAAE,CAAC,IAAD;AAApB,UAlBF,EAmBE,KAAC,MAAD;AACI,UAAA,KAAK,EAAC,OADV;AAEI,UAAA,YAAY,EAAC,OAFjB;AAGI,UAAA,WAAW,EAAC,aAHhB;AAII,UAAA,KAAK,EAAEI,IAAI,CAACY,KAAL,IAAc,IAJzB;AAKI,UAAA,YAAY,EAAE,sBAACC,KAAD,EAAW;AACvBX,YAAAA,QAAQ,CAAC;AAACY,cAAAA,IAAI,EAAE,OAAP;AAAgBD,cAAAA,KAAK,EAALA;AAAhB,aAAD,CAAR;AACD;AAPL,UAnBF,EA6BE,KAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEjB,EAAE,CAAC,IAAD;AAApB,UA7BF,EA+BE,KAAC,MAAD;AACI,UAAA,KAAK,EAAC,UADV;AAEI,UAAA,WAAW,EAAC,gBAFhB;AAGI,UAAA,eAAe,EAAEU,aAHrB;AAII,UAAA,IAAI,EACF,KAAC,gBAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbC,cAAAA,gBAAgB,CAAC,UAACQ,IAAD;AAAA,uBAAU,CAACA,IAAX;AAAA,eAAD,CAAhB;AACD,aAHH;AAAA,sBAIE,KAAC,IAAD;AAAA,wBAAOT,aAAa,GAAG,MAAH,GAAY;AAAhC;AAJF,YALN;AAYI,UAAA,YAAY,EAAC,OAZjB;AAaI,UAAA,YAAY,EAAE,sBAACO,KAAD,EAAW;AACvBX,YAAAA,QAAQ,CAAC;AAACY,cAAAA,IAAI,EAAE,UAAP;AAAmBD,cAAAA,KAAK,EAALA;AAAnB,aAAD,CAAR;AACD;AAfL,UA/BF,EAgDE,KAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEjB,EAAE,CAAC,IAAD;AAApB,UAhDF,EAiDE,KAAC,YAAD;AACI,UAAA,QAAQ,EAAEO,OADd;AAEI,UAAA,OAAO,EAAEC,QAFb;AAGI,UAAA,OAAO,EAAED,OAHb;AAII,UAAA,OAAO,MAJX;AAKI,UAAA,KAAK,EAAC;AALV,UAjDF;AAAA,QAFF;AAAA,MADA,EA6DA,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEX,YAAY,CAACwB,YAA1B;AAAA,gBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,UAAU,CAACwB,SAAxB;AAAA;AAAA;AADF,MA7DA,EAgEA,KAAC,MAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,OAAO,EAAE,mBAAM;AACbC,QAAAA,KAAK,CAACC,UAAN,CAAiBd,QAAjB,CAA0B,UAA1B;AACD,OAJH;AAKE,MAAA,KAAK,EAAC;AALR,MAhEA;AAAA,IADF;AA0ED,CApFD;;AAsFA,eAAeP,cAAf","sourcesContent":["import {useNavigation} from '@react-navigation/native';\nimport React, {useState} from 'react';\nimport {Image, Text, View, StatusBar, ScrollView, Alert} from 'react-native';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport CustomButton from '../CustomButton';\nimport Inputs from '../Inputs';\nimport Message from '../Messege';\nimport globalStyles from \"../../styles/global\";\nimport globalText from \"../../styles/globalText\";\nimport Button from \"../../components/Button\";\nimport Spacer from \"../../components/Spacer\";\nimport { WP } from \"../../utils/resources\";\nimport { COLORS } from \"../../styles/theme\";\n\n\nconst LoginComponent = ({\n  error,\n  form,\n  justSignedUp,\n  onChange,\n  loading,\n  onSubmit,\n}) => {\n  const {navigate} = useNavigation();\n  const [isSecureEntry, setIsSecureEntry] = useState(true);\n  return (\n    <>\n    <ScrollView style={globalStyles.container}>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\n      <View style={globalStyles.subContainer}>\n        <Spacer vertical={WP(\"5%\")} />\n        <Text style={{ ...globalText.h1, alignSelf: \"center\" }}>Login</Text>\n        {justSignedUp && (\n            <Message\n              onDismiss={() => {}}\n              success\n              message=\"Account created successfully\"\n            />\n          )}\n          {error && !error.error && (\n            <Message\n              onDismiss={() => {}}\n              danger\n              message=\"invalid credentials\"\n            />\n          )}\n          {error?.error && <Message danger onDismiss message={error?.error} />}\n        <Spacer vertical={WP(\"5%\")} />\n        <Inputs\n            label=\"email\"\n            iconPosition=\"right\"\n            placeholder=\"Enter email\"\n            value={form.email || null}\n            onChangeText={(value) => {\n              onChange({name: 'email', value});\n            }}\n          />\n\n        <Spacer vertical={WP(\"5%\")} />\n\n        <Inputs\n            label=\"Password\"\n            placeholder=\"Enter Password\"\n            secureTextEntry={isSecureEntry}\n            icon={\n              <TouchableOpacity\n                onPress={() => {\n                  setIsSecureEntry((prev) => !prev);\n                }}>\n                <Text>{isSecureEntry ? 'Show' : 'Hide'}</Text>\n              </TouchableOpacity>\n            }\n            iconPosition=\"right\"\n            onChangeText={(value) => {\n              onChange({name: 'password', value});\n            }}\n          />\n        <Spacer vertical={WP(\"5%\")} />\n        <CustomButton\n            disabled={loading}\n            onPress={onSubmit}\n            loading={loading}\n            primary\n            title=\"Submit\"\n          />\n      </View>\n    </ScrollView>\n    <View style={globalStyles.absoluteText}>\n      <Text style={globalText.labelText}>Create new account</Text>\n    </View>\n    <Button\n      absolute\n      onPress={() => {\n        props.navigation.navigate(\"Register\");\n      }}\n      title=\"Sign Up\"\n    />\n  </>\n  );\n};\n\nexport default LoginComponent;\n\n//props.navigation.navigate(\"Register\");"]},"metadata":{},"sourceType":"module"}