{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Agenda } from \"react-native-calendars\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar timeToString = function timeToString(time) {\n  var date = new Date(time);\n  return date.toISOString().split('T')[0];\n};\n\nvar CalendarScreen = function CalendarScreen() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var loadItems = function loadItems(day) {\n    setTimeout(function () {\n      for (var i = -15; i < 85; i++) {\n        var time = day.timestamp + i * 24 * 60 * 60 * 1000;\n        var strTime = timeToString(time);\n\n        if (!items[strTime]) {\n          items[strTime] = [];\n          var numItems = Math.floor(Math.random() * 3 + 1);\n\n          for (var j = 0; j < numItems; j++) {\n            items[strTime].push({\n              name: 'Item for ' + strTime + ' #' + j,\n              height: Math.max(50, Math.floor(Math.random() * 150))\n            });\n          }\n        }\n      }\n\n      var newItems = {};\n      Object.keys(items).forEach(function (key) {\n        newItems[key] = items[key];\n      });\n      setItems(newItems);\n    }, 1000);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"hello calendar\"\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(Agenda, {\n        items: items,\n        loadItemsForMonth: loadItems,\n        selected: '2021-05-16',\n        showClosingKnob: true\n      })\n    })]\n  });\n};\n\nexport default CalendarScreen;","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/screens/Calendar.js"],"names":["React","useState","Agenda","timeToString","time","date","Date","toISOString","split","CalendarScreen","items","setItems","loadItems","day","setTimeout","i","timestamp","strTime","numItems","Math","floor","random","j","push","name","height","max","newItems","Object","keys","forEach","key","flex"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAKA,SAASC,MAAT,QAAuB,wBAAvB;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAG3B,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAb;AACA,SAAOC,IAAI,CAACE,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAP;AACD,CALH;;AAOA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAGzB,kBAA0BR,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,SAAS,GAAC,SAAVA,SAAU,CAACC,GAAD,EAAQ;AACpBC,IAAAA,UAAU,CAAC,YAAM;AACf,WAAK,IAAIC,CAAC,GAAG,CAAC,EAAd,EAAkBA,CAAC,GAAG,EAAtB,EAA0BA,CAAC,EAA3B,EAA+B;AAC7B,YAAMX,IAAI,GAAGS,GAAG,CAACG,SAAJ,GAAgBD,CAAC,GAAG,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IAAhD;AACA,YAAME,OAAO,GAAGd,YAAY,CAACC,IAAD,CAA5B;;AACA,YAAI,CAACM,KAAK,CAACO,OAAD,CAAV,EAAqB;AACnBP,UAAAA,KAAK,CAACO,OAAD,CAAL,GAAiB,EAAjB;AACA,cAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAAhB,GAAoB,CAA/B,CAAjB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAApB,EAA8BI,CAAC,EAA/B,EAAmC;AACjCZ,YAAAA,KAAK,CAACO,OAAD,CAAL,CAAeM,IAAf,CAAoB;AAClBC,cAAAA,IAAI,EAAE,cAAcP,OAAd,GAAwB,IAAxB,GAA+BK,CADnB;AAElBG,cAAAA,MAAM,EAAEN,IAAI,CAACO,GAAL,CAAS,EAAT,EAAaP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AAFU,aAApB;AAID;AACF;AACF;;AACD,UAAMM,QAAQ,GAAG,EAAjB;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYnB,KAAZ,EAAmBoB,OAAnB,CAA2B,UAAAC,GAAG,EAAI;AAChCJ,QAAAA,QAAQ,CAACI,GAAD,CAAR,GAAgBrB,KAAK,CAACqB,GAAD,CAArB;AACD,OAFD;AAGApB,MAAAA,QAAQ,CAACgB,QAAD,CAAR;AACD,KApBS,EAoBP,IApBO,CAAV;AAqBD,GAtBH;;AAwBC,SACA,MAAC,IAAD;AAAA,eACE,KAAC,IAAD;AAAA;AAAA,MADF,EAEC,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACK,QAAAA,IAAI,EAAC;AAAN,OAAb;AAAA,gBAEE,KAAC,MAAD;AACA,QAAA,KAAK,EAAEtB,KADP;AAEA,QAAA,iBAAiB,EAAEE,SAFnB;AAGA,QAAA,QAAQ,EAAE,YAHV;AAIA,QAAA,eAAe,EAAE;AAJjB;AAFF,MAFD;AAAA,IADA;AAcF,CA3CH;;AA6CE,eAAeH,cAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Text, View\r\n} from \"react-native\";\r\n\r\n//agenda import\r\nimport { Agenda } from \"react-native-calendars\";\r\n\r\n// // global func\r\nconst timeToString = (time) => {\r\n  \r\n  // hook state\r\n    const date = new Date(time);\r\n    return date.toISOString().split('T')[0];\r\n  };\r\n\r\nconst CalendarScreen = () => {\r\n\r\n    \r\n    const [items, setItems] = useState({});\r\n\r\n    const loadItems=(day) =>{\r\n        setTimeout(() => {\r\n          for (let i = -15; i < 85; i++) {\r\n            const time = day.timestamp + i * 24 * 60 * 60 * 1000;\r\n            const strTime = timeToString(time);\r\n            if (!items[strTime]) {\r\n              items[strTime] = [];\r\n              const numItems = Math.floor(Math.random() * 3 + 1);\r\n              for (let j = 0; j < numItems; j++) {\r\n                items[strTime].push({\r\n                  name: 'Item for ' + strTime + ' #' + j,\r\n                  height: Math.max(50, Math.floor(Math.random() * 150))\r\n                });\r\n              }\r\n            }\r\n          }\r\n          const newItems = {};\r\n          Object.keys(items).forEach(key => {\r\n            newItems[key] = items[key];\r\n          });\r\n          setItems(newItems);\r\n        }, 1000);\r\n      }\r\n\r\n     return (\r\n     <View>\r\n       <Text>hello calendar</Text>\r\n      <View style={{flex:1}}>\r\n        \r\n        <Agenda\r\n        items={items}\r\n        loadItemsForMonth={loadItems}\r\n        selected={'2021-05-16'}\r\n        showClosingKnob={true}/>\r\n        \r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  export default CalendarScreen;"]},"metadata":{},"sourceType":"module"}