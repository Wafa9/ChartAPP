{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport envs from \"../config/env\";\nvar headers = {\n  \"Access-Control-Allow-Origin\": '*'\n};\nvar axiosInstance = axios.create({\n  baseURL: 'http://192.168.8.150:8000/',\n  headers: headers\n});\naxiosInstance.interceptors.request.use(function _callee(config) {\n  var token;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n        case 2:\n          token = _context.sent;\n\n          if (token) {\n            config.headers.Authorization = \"Bearer \" + token;\n          }\n\n          return _context.abrupt(\"return\", config);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}, function (error) {\n  return Promise.reject(error);\n});\naxiosInstance.interceptors.response.use(function (response) {\n  return new Promise(function (resolve, reject) {\n    resolve(response);\n  });\n}, function (error) {\n  if (!error.response) {\n    return new Promise(function (resolve, reject) {\n      reject(error);\n    });\n  }\n\n  if (error.response.status === 403) {\n    console.log(\"axios error\");\n  } else {\n    return new Promise(function (resolve, reject) {\n      reject(error);\n    });\n  }\n});\nexport default axiosInstance;","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/helpers/axiosInterceptor.js"],"names":["AsyncStorage","axios","envs","headers","axiosInstance","create","baseURL","interceptors","request","use","config","getItem","token","Authorization","error","Promise","reject","response","resolve","status","console","log"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP;AAEA,IAAIC,OAAO,GAAG;AAAC,iCAA8B;AAA/B,CAAd;AAEA,IAAMC,aAAa,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAC,4BADuB;AAE/BH,EAAAA,OAAO,EAAPA;AAF+B,CAAb,CAAtB;AAOAC,aAAa,CAACG,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CACI,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACwBV,YAAY,CAACW,OAAb,CAAqB,OAArB,CADxB;;AAAA;AACUC,UAAAA,KADV;;AAEI,cAAGA,KAAH,EAAS;AACLF,YAAAA,MAAM,CAACP,OAAP,CAAeU,aAAf,eAAuCD,KAAvC;AACH;;AAJL,2CAKQF,MALR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CADJ,EASI,UAACI,KAAD,EAAS;AACL,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAXL;AAcIV,aAAa,CAACG,YAAd,CAA2BU,QAA3B,CAAoCR,GAApC,CACI,UAACQ,QAAD;AAAA,SACE,IAAIF,OAAJ,CAAY,UAACG,OAAD,EAAUF,MAAV,EAAqB;AAC/BE,IAAAA,OAAO,CAACD,QAAD,CAAP;AACD,GAFD,CADF;AAAA,CADJ,EAKI,UAACH,KAAD,EAAW;AACT,MAAI,CAACA,KAAK,CAACG,QAAX,EAAqB;AACnB,WAAO,IAAIF,OAAJ,CAAY,UAACG,OAAD,EAAUF,MAAV,EAAqB;AACtCA,MAAAA,MAAM,CAACF,KAAD,CAAN;AACD,KAFM,CAAP;AAGD;;AAED,MAAIA,KAAK,CAACG,QAAN,CAAeE,MAAf,KAA0B,GAA9B,EAAmC;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAFD,MAEO;AACL,WAAO,IAAIN,OAAJ,CAAY,UAACG,OAAD,EAAUF,MAAV,EAAqB;AACtCA,MAAAA,MAAM,CAACF,KAAD,CAAN;AACD,KAFM,CAAP;AAGD;AACF,CAnBL;AAuBJ,eAAeV,aAAf","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport envs from '../config/env'\n\nlet headers = {\"Access-Control-Allow-Origin\":'*'};\n\nconst axiosInstance = axios.create({\n    baseURL:'http://192.168.8.150:8000/',\n    headers,\n\n}\n)\n\naxiosInstance.interceptors.request.use(\n    async (config) => {\n        const token = await AsyncStorage.getItem(\"token\");\n        if(token){\n            config.headers.Authorization=`Bearer ${token}`;\n        }\n     return config\n\n    },\n    (error)=>{\n        return Promise.reject(error)\n    }\n    );\n\n    axiosInstance.interceptors.response.use(\n        (response) =>\n          new Promise((resolve, reject) => {\n            resolve(response);\n          }),\n        (error) => {\n          if (!error.response) {\n            return new Promise((resolve, reject) => {\n              reject(error);\n            });\n          }\n      \n          if (error.response.status === 403) {\n            console.log(\"axios error\")\n          } else {\n            return new Promise((resolve, reject) => {\n              reject(error);\n            });\n          }\n        },\n      );\n      \n\nexport default axiosInstance\n\n"]},"metadata":{},"sourceType":"module"}