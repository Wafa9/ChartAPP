{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport globalStyles from \"../../styles/global\";\nimport globalText from \"../../styles/globalText\";\nimport Spacer from \"../../components/Spacer\";\nimport { WP } from \"../../utils/resources\";\nimport { COLORS } from \"../../styles/theme\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport axiosInstance from \"../../helpers/axiosInterceptor\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { useRoute } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { useContext } from 'react';\nimport LoginComponent from \"../../components/login/loginComponent\";\nimport loginUser from \"../../context/actions/auth/loginUser\";\nimport { GlobalContext } from \"../../context/provider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      form = _useState2[0],\n      setForm = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      justSignedUp = _useState4[0],\n      setJustSignedUp = _useState4[1];\n\n  var _useRoute = useRoute(),\n      params = _useRoute.params;\n\n  React.useEffect(function () {\n    if (params != null && params.data) {\n      setJustSignedUp(true);\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        email: params.data.email\n      }));\n    }\n  }, [params]);\n\n  var _useContext = useContext(GlobalContext),\n      authDispatch = _useContext.authDispatch,\n      _useContext$authState = _useContext.authState,\n      error = _useContext$authState.error,\n      loading = _useContext$authState.loading;\n\n  var onSubmit = function onSubmit() {\n    if (form.email && form.password) {\n      loginUser(form)(authDispatch);\n    }\n  };\n\n  var onChange = function onChange(_ref) {\n    var name = _ref.name,\n        value = _ref.value;\n    setJustSignedUp(false);\n    setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, name, value)));\n  };\n\n  return _jsx(LoginComponent, {\n    onSubmit: onSubmit,\n    onChange: onChange,\n    form: form,\n    error: error,\n    loading: loading,\n    justSignedUp: justSignedUp\n  });\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/screens/Auth/LoginScreen.js"],"names":["globalStyles","globalText","Spacer","WP","COLORS","Input","Button","axiosInstance","AsyncStorage","useRoute","React","useState","useContext","LoginComponent","loginUser","GlobalContext","LoginScreen","props","form","setForm","justSignedUp","setJustSignedUp","params","useEffect","data","email","authDispatch","authState","error","loading","onSubmit","password","onChange","name","value"],"mappings":";;;;;;;;;;;;AACA,OAAOA,YAAP;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;AACA,SAASC,EAAT;AACA,SAASC,MAAT;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,SAAQC,QAAR,QAAuB,0BAAvB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,OAAOC,cAAP;AACA,OAAOC,SAAP;AACA,SAAQC,aAAR;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAE7B,kBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwCR,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOS,YAAP;AAAA,MAAqBC,eAArB;;AACA,kBAAiBZ,QAAQ,EAAzB;AAAA,MAAOa,MAAP,aAAOA,MAAP;;AAEAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAM;AACpB,QAAID,MAAJ,YAAIA,MAAM,CAAEE,IAAZ,EAAkB;AAChBH,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,MAAAA,OAAO,iCAAKD,IAAL;AAAWO,QAAAA,KAAK,EAAEH,MAAM,CAACE,IAAP,CAAYC;AAA9B,SAAP;AACD;AACF,GALD,EAKG,CAACH,MAAD,CALH;;AAOA,oBAGIV,UAAU,CAACG,aAAD,CAHd;AAAA,MACEW,YADF,eACEA,YADF;AAAA,0CAEEC,SAFF;AAAA,MAEcC,KAFd,yBAEcA,KAFd;AAAA,MAEqBC,OAFrB,yBAEqBA,OAFrB;;AAKA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIZ,IAAI,CAACO,KAAL,IAAcP,IAAI,CAACa,QAAvB,EAAiC;AAC/BjB,MAAAA,SAAS,CAACI,IAAD,CAAT,CAAgBQ,YAAhB;AACD;AACF,GAJD;;AAMA,MAAMM,QAAQ,GAAG,SAAXA,QAAW,OAAmB;AAAA,QAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,QAAXC,KAAW,QAAXA,KAAW;AAClCb,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,IAAAA,OAAO,iCAAKD,IAAL,2BAAYe,IAAZ,EAAmBC,KAAnB,GAAP;AACD,GAHD;;AAKA,SACE,KAAC,cAAD;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAEE,IAAA,QAAQ,EAAEE,QAFZ;AAGE,IAAA,IAAI,EAAEd,IAHR;AAIE,IAAA,KAAK,EAAEU,KAJT;AAKE,IAAA,OAAO,EAAEC,OALX;AAME,IAAA,YAAY,EAAET;AANhB,IADF;AAYD,CAzCD;;AA2CA,eAAeJ,WAAf","sourcesContent":["import { View, Text, StatusBar, ScrollView, Alert } from \"react-native\";\r\nimport globalStyles from \"../../styles/global\";\r\nimport globalText from \"../../styles/globalText\";\r\nimport Spacer from \"../../components/Spacer\";\r\nimport { WP } from \"../../utils/resources\";\r\nimport { COLORS } from \"../../styles/theme\";\r\nimport Input from \"../../components/Input\";\r\nimport Button from \"../../components/Button\";\r\nimport axiosInstance from \"../../helpers/axiosInterceptor\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nimport {useRoute} from '@react-navigation/native';\r\nimport React, {useState} from 'react';\r\nimport {useContext} from 'react';\r\nimport LoginComponent from \"../../components/login/loginComponent\";\r\nimport loginUser from \"../../context/actions/auth/loginUser\";\r\nimport {GlobalContext} from \"../../context/provider\";\r\n\r\n\r\nconst LoginScreen = (props) => {\r\n\r\n  const [form, setForm] = useState({});\r\n  const [justSignedUp, setJustSignedUp] = useState(false);\r\n  const {params} = useRoute();\r\n\r\n  React.useEffect(() => {\r\n    if (params?.data) {\r\n      setJustSignedUp(true);\r\n      setForm({...form, email: params.data.email});\r\n    }\r\n  }, [params]);\r\n\r\n  const {\r\n    authDispatch,\r\n    authState: {error, loading},\r\n  } = useContext(GlobalContext);\r\n\r\n  const onSubmit = () => {\r\n    if (form.email && form.password) {\r\n      loginUser(form)(authDispatch);\r\n    }\r\n  };\r\n\r\n  const onChange = ({name, value}) => {\r\n    setJustSignedUp(false);\r\n    setForm({...form, [name]: value});\r\n  };\r\n\r\n  return (\r\n    <LoginComponent\r\n      onSubmit={onSubmit}\r\n      onChange={onChange}\r\n      form={form}\r\n      error={error}\r\n      loading={loading}\r\n      justSignedUp={justSignedUp}\r\n    />\r\n  );\r\n  \r\n \r\n};\r\n\r\nexport default LoginScreen;\r\n\r\n// const [email, setEmail] = useState(\"\");\r\n// const [password, setPassword] = useState(\"\");\r\n\r\n\r\n// const onLogin = async() => {\r\n//   if (email != \"\" && password != \"\") {\r\n    \r\n//     const ban = await axiosInstance.post('auth/login/', {\r\n//     email,\r\n//     password,\r\n//   })\r\n//   .then((res) => {\r\n//     AsyncStorage.setItem('token', res.data.tokens[\"access\"]);\r\n//     AsyncStorage.setItem('user', JSON.stringify(res.data.user));\r\n//     console.log(res)\r\n    \r\n//   })\r\n//   .catch((err) => {console.log(\"error\")});\r\n  \r\n//   } else {\r\n//     Alert.alert(\"Fiance\", \"Email and Password is required !\");\r\n//   }\r\n// };\r\n// return (\r\n//   <>\r\n//     <ScrollView style={globalStyles.container}>\r\n//       <StatusBar barStyle=\"dark-content\" backgroundColor=\"white\" />\r\n//       <View style={globalStyles.subContainer}>\r\n//         <Spacer vertical={WP(\"5%\")} />\r\n//         <Text style={{ ...globalText.h1, alignSelf: \"center\" }}>Login</Text>\r\n//         <Spacer vertical={WP(\"5%\")} />\r\n//         <Input\r\n//           placeholder=\"Enter your email\"\r\n//           value={email}\r\n//           label=\"Email\"\r\n//           icon=\"email\"\r\n//           onChangeText={(text) => {\r\n//             setEmail(text);\r\n//           }}\r\n//         />\r\n//         <Spacer vertical={WP(\"3%\")} />\r\n//         <Input\r\n//           placeholder=\"Enter your password\"\r\n//           value={password}\r\n//           label=\"Password\"\r\n//           icon=\"lock\"\r\n//           onChangeText={(text) => {\r\n//             setPassword(text);\r\n//           }}\r\n//         />\r\n//         <Spacer vertical={WP(\"5%\")} />\r\n//         <Button\r\n//           onPress={() => {\r\n//             onLogin();\r\n//           }}\r\n//           title=\"Login\"\r\n//         />\r\n//       </View>\r\n//     </ScrollView>\r\n//     <View style={globalStyles.absoluteText}>\r\n//       <Text style={globalText.labelText}>Create new account</Text>\r\n//     </View>\r\n//     <Button\r\n//       absolute\r\n//       onPress={() => {\r\n//         props.navigation.navigate(\"Register\");\r\n//       }}\r\n//       title=\"Sign Up\"\r\n//     />\r\n//   </>\r\n// );\r\n"]},"metadata":{},"sourceType":"module"}