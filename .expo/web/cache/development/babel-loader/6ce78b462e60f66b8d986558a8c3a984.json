{"ast":null,"code":"import AsyncStorageLib from '@react-native-async-storage/async-storage';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LOGIN_FAIL, LOGIN_LOADING, LOGIN_SUCCESS } from \"../../../constants/actionType\";\nimport axiosInstance from \"../../../helpers/axiosInterceptor\";\nexport default (function (_ref) {\n  var password = _ref.password,\n      email = _ref.email;\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN_LOADING\n    });\n    axiosInstance.post('auth/login/', {\n      password: password,\n      email: email\n    }).then(function (res) {\n      var len = res.data.tokens;\n      var tokens = res.data.tokens;\n      var tokenArr = len.split(',');\n      var ref = tokenArr[0];\n      var acc = tokenArr[1];\n      var refresh = ref.slice(13, 242);\n      var access = acc.slice(12, 240);\n      AsyncStorage.setItem('token', access);\n      AsyncStorage.setItem('refresh_token', refresh);\n      var r = AsyncStorage.getItem('token');\n      console.log(r);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response ? err.response.data : {\n          error: 'Something went wrong, try agin'\n        }\n      });\n    });\n  };\n});","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/context/actions/auth/loginUser.js"],"names":["AsyncStorageLib","AsyncStorage","LOGIN_FAIL","LOGIN_LOADING","LOGIN_SUCCESS","axiosInstance","password","email","dispatch","type","post","then","res","len","data","tokens","tokenArr","split","ref","acc","refresh","slice","access","setItem","r","getItem","console","log","payload","catch","err","response","error"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SACEC,UADF,EAEEC,aAFF,EAGEC,aAHF;AAKA,OAAOC,aAAP;AAEA,gBAAe;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,MAAYC,KAAZ,QAAYA,KAAZ;AAAA,SAAuB,UAACC,QAAD,EAAc;AAClDA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAGAE,IAAAA,aAAa,CACVK,IADH,CACQ,aADR,EACuB;AACnBJ,MAAAA,QAAQ,EAARA,QADmB;AAEnBC,MAAAA,KAAK,EAALA;AAFmB,KADvB,EAKGI,IALH,CAKQ,UAACC,GAAD,EAAS;AACX,UAAIC,GAAG,GAAGD,GAAG,CAACE,IAAJ,CAASC,MAAnB;AACA,UAAIA,MAAM,GAAGH,GAAG,CAACE,IAAJ,CAASC,MAAtB;AACA,UAAIC,QAAQ,GAAGH,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAf;AACA,UAAIC,GAAG,GAACF,QAAQ,CAAC,CAAD,CAAhB;AACA,UAAIG,GAAG,GAACH,QAAQ,CAAC,CAAD,CAAhB;AACA,UAAII,OAAO,GAAEF,GAAG,CAACG,KAAJ,CAAU,EAAV,EAAa,GAAb,CAAb;AACA,UAAIC,MAAM,GAAEH,GAAG,CAACE,KAAJ,CAAU,EAAV,EAAa,GAAb,CAAZ;AACApB,MAAAA,YAAY,CAACsB,OAAb,CAAqB,OAArB,EAA8BD,MAA9B;AACArB,MAAAA,YAAY,CAACsB,OAAb,CAAqB,eAArB,EAAsCH,OAAtC;AACA,UAAII,CAAC,GAACvB,YAAY,CAACwB,OAAb,CAAqB,OAArB,CAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACFhB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,aADC;AAEPwB,QAAAA,OAAO,EAAEhB,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KArBH,EAsBGe,KAtBH,CAsBS,UAACC,GAAD,EAAS;AACdtB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,UADC;AAEP0B,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,GACLD,GAAG,CAACC,QAAJ,CAAajB,IADR,GAEL;AAACkB,UAAAA,KAAK,EAAE;AAAR;AAJG,OAAD,CAAR;AAMD,KA7BH;AA8BD,GAlCc;AAAA,CAAf","sourcesContent":["import AsyncStorageLib from '@react-native-async-storage/async-storage';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {\n  LOGIN_FAIL,\n  LOGIN_LOADING,\n  LOGIN_SUCCESS,\n} from '../../../constants/actionType';\nimport axiosInstance from '../../../helpers/axiosInterceptor';\n\nexport default ({password, email}) => (dispatch) => {\n  dispatch({\n    type: LOGIN_LOADING,\n  });\n  axiosInstance\n    .post('auth/login/', {\n      password,\n      email,\n    })\n    .then((res) => {\n        let len = res.data.tokens\n        let tokens = res.data.tokens\n        let tokenArr = len.split(',')\n        let ref=tokenArr[0]\n        let acc=tokenArr[1]\n        let refresh= ref.slice(13,242)\n        let access= acc.slice(12,240)\n        AsyncStorage.setItem('token', access);\n        AsyncStorage.setItem('refresh_token', refresh);\n        let r=AsyncStorage.getItem('token')\n        console.log(r)\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response\n          ? err.response.data\n          : {error: 'Something went wrong, try agin'},\n      });\n    });\n};"]},"metadata":{},"sourceType":"module"}