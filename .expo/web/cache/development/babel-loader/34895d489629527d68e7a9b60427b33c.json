{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onChangeText\", \"iconPosition\", \"icon\", \"style\", \"value\", \"label\", \"error\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport colors from \"../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Inputs = function Inputs(_ref) {\n  var onChangeText = _ref.onChangeText,\n      iconPosition = _ref.iconPosition,\n      icon = _ref.icon,\n      style = _ref.style,\n      value = _ref.value,\n      label = _ref.label,\n      error = _ref.error,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focused = _React$useState2[0],\n      setFocused = _React$useState2[1];\n\n  var getFlexDirection = function getFlexDirection() {\n    if (icon && iconPosition) {\n      if (iconPosition === 'left') {\n        return 'row';\n      } else if (iconPosition === 'right') {\n        return 'row-reverse';\n      }\n    }\n  };\n\n  var getBorderColor = function getBorderColor() {\n    if (error) {\n      return colors.danger;\n    }\n\n    if (focused) {\n      return colors.primary;\n    } else {\n      return colors.grey;\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.inputContainer,\n    children: [label && _jsx(Text, {\n      children: label\n    }), _jsxs(View, {\n      style: [styles.wrapper, {\n        alignItems: icon ? 'center' : 'baseline'\n      }, {\n        borderColor: getBorderColor(),\n        flexDirection: getFlexDirection()\n      }],\n      children: [_jsx(View, {\n        children: icon && icon\n      }), _jsx(TextInput, _objectSpread({\n        style: [styles.textInput, style],\n        onChangeText: onChangeText,\n        value: value,\n        onFocus: function onFocus() {\n          setFocused(true);\n        },\n        onBlur: function onBlur() {\n          setFocused(false);\n        }\n      }, props))]\n    }), error && _jsx(Text, {\n      style: styles.error,\n      children: error\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    height: 42,\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: 5,\n    marginTop: 5\n  },\n  inputContainer: {\n    paddingVertical: 12\n  },\n  textInput: {\n    flex: 1,\n    width: '100%'\n  },\n  error: {\n    color: colors.danger,\n    paddingTop: 4,\n    fontSize: 12\n  }\n});\nexport default Inputs;","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/components/Inputs.js"],"names":["React","colors","Inputs","onChangeText","iconPosition","icon","style","value","label","error","props","useState","focused","setFocused","getFlexDirection","getBorderColor","danger","primary","grey","styles","inputContainer","wrapper","alignItems","borderColor","flexDirection","textInput","StyleSheet","create","height","borderWidth","borderRadius","paddingHorizontal","marginTop","paddingVertical","flex","width","color","paddingTop","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {View, Text, TextInput, StyleSheet} from 'react-native';\nimport colors from '../styles/colors';\n\nconst Inputs = ({\n  onChangeText,\n  iconPosition,\n  icon,\n  style,\n  value,\n  label,\n  error,\n  ...props\n}) => {\n  const [focused, setFocused] = React.useState(false);\n\n  const getFlexDirection = () => {\n    if (icon && iconPosition) {\n      if (iconPosition === 'left') {\n        return 'row';\n      } else if (iconPosition === 'right') {\n        return 'row-reverse';\n      }\n    }\n  };\n\n  const getBorderColor = () => {\n    if (error) {\n      return colors.danger;\n    }\n\n    if (focused) {\n      return colors.primary;\n    } else {\n      return colors.grey;\n    }\n  };\n  return (\n    <View style={styles.inputContainer}>\n      {label && <Text>{label}</Text>}\n\n      <View\n        style={[\n          styles.wrapper,\n          {alignItems: icon ? 'center' : 'baseline'},\n          {borderColor: getBorderColor(), flexDirection: getFlexDirection()},\n        ]}>\n        <View>{icon && icon}</View>\n\n        <TextInput\n          style={[styles.textInput, style]}\n          onChangeText={onChangeText}\n          value={value}\n          onFocus={() => {\n            setFocused(true);\n          }}\n          onBlur={() => {\n            setFocused(false);\n          }}\n          {...props}\n        />\n      </View>\n\n      {error && <Text style={styles.error}>{error}</Text>}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        height: 42,\n        borderWidth: 1,\n        borderRadius: 4,\n        paddingHorizontal: 5,\n    \n        marginTop: 5,\n      },\n    \n      inputContainer: {\n        paddingVertical: 12,\n      },\n    \n      textInput: {\n        flex: 1,\n        width: '100%',\n      },\n    \n      error: {\n        color: colors.danger,\n        paddingTop: 4,\n        fontSize: 12,\n      },\n})\n\nexport default Inputs;"]},"metadata":{},"sourceType":"module"}