{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { COLORS, SIZES, FONTS } from \"../styles/theme.js\";\nimport { FieldArray, Formik } from \"formik\";\nimport globalText from \"../styles/globalText\";\nimport globalStyles from \"../styles/globalElements.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChangePhone = function ChangePhone(_ref) {\n  var navigation = _ref.navigation;\n  var radioopt = [{}, {}, {}, {}];\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.gray\n    },\n    children: _jsx(Formik, {\n      initialValues: {\n        oldNumber: '',\n        newNumber: ''\n      },\n      onSubmit: function onSubmit(values) {\n        console.log(values);\n      },\n      children: function children(props) {\n        return _jsxs(View, {\n          style: styles.whitecard,\n          children: [_jsxs(View, {\n            style: _objectSpread(_objectSpread({}, globalStyles.transactionContainer), {}, {\n              backgroundColor: COLORS.gray\n            }),\n            children: [_jsx(Text, {\n              style: _objectSpread(_objectSpread({}, globalText.h1), {}, {\n                paddingTop: 15,\n                textAlign: 'center',\n                fontSize: 24,\n                color: 'white'\n              }),\n              children: \"Change The Phone Number\"\n            }), _jsx(Text, {\n              style: _objectSpread(_objectSpread({}, globalText.h3), {}, {\n                paddingTop: 25,\n                textAlign: 'left',\n                color: 'white'\n              }),\n              children: \"Previous Phone Number :\"\n            }), _jsx(TextInput, {\n              style: styles.inputstyle,\n              placeholder: \"0500000000\",\n              onChangeText: props.handleChange('oldNumber'),\n              value: props.values.type,\n              keyboardType: \"numeric\"\n            }), _jsx(Text, {\n              style: _objectSpread(_objectSpread({}, globalText.h3), {}, {\n                paddingTop: 20,\n                textAlign: 'left',\n                color: 'white'\n              }),\n              children: \"New Phone Number :\"\n            }), _jsx(TextInput, {\n              style: styles.inputstyle,\n              placeholder: \"0500000000\",\n              onChangeText: props.handleChange('newNumber'),\n              value: props.values.type,\n              keyboardType: \"numeric\"\n            })]\n          }), _jsx(View, {\n            style: {\n              marginTop: 50\n            },\n            children: _jsx(Button, {\n              title: \"Submit  >\",\n              color: \"gray\",\n              onPress: function onPress() {\n                return navigation.push(\"completed\");\n              }\n            })\n          })]\n        });\n      }\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  inputstyle: {\n    borderWidth: 0.2,\n    backgroundColor: 'white',\n    borderColor: 'gray',\n    padding: 8,\n    fontSize: 15,\n    borderRadius: 6,\n    marginTop: 5,\n    marginRight: 2,\n    marginLeft: 2\n  },\n  whitecard: {\n    flex: 1,\n    backgroundColor: '#fbfbfb',\n    padding: 20,\n    paddingTop: 100,\n    shadowColor: '#000',\n    shadowOpacity: 0.1\n  }\n});\nexport default ChangePhone;","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/components/ChangePhone.js"],"names":["React","COLORS","SIZES","FONTS","FieldArray","Formik","globalText","globalStyles","ChangePhone","navigation","radioopt","flex","backgroundColor","gray","oldNumber","newNumber","values","console","log","props","styles","whitecard","transactionContainer","h1","paddingTop","textAlign","fontSize","color","h3","inputstyle","handleChange","type","marginTop","push","StyleSheet","create","borderWidth","borderColor","padding","borderRadius","marginRight","marginLeft","shadowColor","shadowOpacity"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {View, Text, Image, StyleSheet, Button, TextInput} from \"react-native\";\nimport { COLORS, SIZES,FONTS} from '../styles/theme.js';\nimport { FieldArray, Formik} from \"formik\";\nimport globalText from '../styles/globalText';\nimport globalStyles from \"../styles/globalElements.js\";\n\nconst ChangePhone =({ navigation })=>{\n\n    const radioopt = [{},{},{},{}]\n\n    return(\n        <View style={{flex: 1, backgroundColor:COLORS.gray}}>\n\n            <Formik\n            initialValues={{oldNumber:'',newNumber:''}}\n            onSubmit={(values)=>{console.log(values)}}\n            >\n                {(props)=>(\n                    <View style={styles.whitecard}>\n\n                        <View style={{...globalStyles.transactionContainer, backgroundColor: COLORS.gray,}}>\n                        <Text style={{...globalText.h1, paddingTop:15,textAlign:'center',fontSize:24, color:'white'}}>Change The Phone Number</Text>\n\n                        <Text style={{...globalText.h3, paddingTop:25,textAlign:'left',color:'white'}}>Previous Phone Number :</Text>\n\n                        <TextInput\n                        style={styles.inputstyle}\n                        placeholder='0500000000'\n                        onChangeText={props.handleChange('oldNumber')}\n                        value={props.values.type}\n                        keyboardType='numeric'\n                        />\n\n                        <Text style={{...globalText.h3, paddingTop:20,textAlign:'left',color:'white'}}>New Phone Number :</Text>\n\n                        <TextInput\n                        style={styles.inputstyle}\n                        placeholder='0500000000'\n                        onChangeText={props.handleChange('newNumber')}\n                        value={props.values.type}\n                        keyboardType='numeric'\n                        />\n                        </View>\n                        \n                        <View style={{marginTop:50}}>\n                        <Button title='Submit  >' color='gray' onPress={() => navigation.push(\"completed\")}></Button>\n\n                        </View>\n\n                    </View>\n                )}\n            </Formik>\n\n        </View>\n    );\n\n\n\n}\n\nconst styles = StyleSheet.create({\n    inputstyle:{\n        borderWidth:0.2,\n        backgroundColor:'white',\n        borderColor: 'gray',\n        padding:8,\n        fontSize:15,\n        borderRadius:6,\n        marginTop :5,\n        marginRight:2,\n        marginLeft:2,\n        \n        \n        \n    },\n    whitecard:{\n            flex: 1,\n            backgroundColor: '#fbfbfb',\n            padding: 20, \n            paddingTop:100,\n            shadowColor: '#000',\n            shadowOpacity: 0.1, },\n})\n\nexport default ChangePhone;"]},"metadata":{},"sourceType":"module"}