{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Home from \"../screens/Home\";\nimport ProfileScreen from \"../screens/Profile\";\nimport CalendarScreen from \"../screens/Calendar\";\nimport AddScreen from \"../screens/Add\";\nimport Charts from \"../screens/Charts\";\nimport ChangeUsername from \"./ChangeUsername\";\nimport ChangePhone from \"./ChangePhone\";\nimport Logout from \"../screens/Auth/LogoutScreen\";\nimport Completed from \"./Completed\";\nimport LoginScreen from \"../screens/Auth/LoginScreen\";\nimport { GlobalContext } from \"../context/provider\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport \"react-native-gesture-handler\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport globalStyles from \"../styles/globalElements\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Details from \"../screens/Details\";\nimport RegisterScreen from \"../screens/Auth/RegisterScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nvar ProfileStack = createStackNavigator();\n\nvar ProfileStackScreen = function ProfileStackScreen() {\n  return _jsxs(ProfileStack.Navigator, {\n    children: [_jsx(ProfileStack.Screen, {\n      name: \"profile\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(ProfileStack.Screen, {\n      name: \"changeUsername\",\n      component: ChangeUsername,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(ProfileStack.Screen, {\n      name: \"Logout\",\n      component: Logout,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(ProfileStack.Screen, {\n      name: \"completed\",\n      component: Completed,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n};\n\nvar AuthStack = function AuthStack() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Login\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen\n    })]\n  });\n};\n\nvar HomeStack = function HomeStack() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: Home\n    }), _jsx(Stack.Screen, {\n      name: \"TabStack\",\n      component: TabStack\n    }), _jsx(Stack.Screen, {\n      name: \"Details\",\n      component: Details\n    })]\n  });\n};\n\nvar LandingStack = function LandingStack() {\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"TabStack\",\n      component: TabStack\n    })\n  });\n};\n\nvar TabStack = function TabStack() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarShowLabel: false,\n      headerShown: false\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"HomeStack\",\n      component: HomeStack,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused;\n          return _jsx(View, {\n            style: {\n              position: \"absolute\",\n              top: \"50%\"\n            },\n            children: _jsx(AntDesign, {\n              name: \"home\",\n              size: 24,\n              color: focused ? \"black\" : \"gray\"\n            })\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Charts\",\n      component: Charts,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return _jsx(View, {\n            style: {\n              position: \"absolute\",\n              top: \"50%\"\n            },\n            children: _jsx(AntDesign, {\n              name: \"barschart\",\n              size: 24,\n              color: focused ? \"black\" : \"gray\"\n            })\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Add\",\n      component: AddScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return _jsx(TouchableOpacity, {\n            children: _jsx(View, {\n              style: globalStyles.plusbutton,\n              children: _jsx(AntDesign, {\n                name: \"plus\",\n                size: 24,\n                color: focused ? \"gray\" : \"white\"\n              })\n            })\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Calendar\",\n      component: CalendarScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return _jsx(View, {\n            style: {\n              position: \"absolute\",\n              top: \"50%\"\n            },\n            children: _jsx(AntDesign, {\n              name: \"calendar\",\n              size: 24,\n              color: focused ? \"black\" : \"gray\"\n            })\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileStackScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var focused = _ref5.focused;\n          return _jsx(View, {\n            style: {\n              position: \"absolute\",\n              top: \"50%\"\n            },\n            children: _jsx(AntDesign, {\n              name: \"user\",\n              size: 24,\n              color: focused ? \"black\" : \"gray\"\n            })\n          });\n        }\n      }\n    })]\n  });\n};\n\nvar NavigationBar = function NavigationBar() {\n  var _useContext = useContext(GlobalContext),\n      isLoggedIn = _useContext.authState.isLoggedIn;\n\n  var _React$useState = React.useState(isLoggedIn),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isAuthenticated = _React$useState2[0],\n      setIsAuthenticated = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      authLoaded = _React$useState4[0],\n      setAuthLoaded = _React$useState4[1];\n\n  var getUser = function getUser() {\n    var token;\n    return _regeneratorRuntime.async(function getUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 3:\n            token = _context.sent;\n\n            if (token) {\n              setAuthLoaded(true);\n              setIsAuthenticated(true);\n            } else {\n              setAuthLoaded(true);\n              setIsAuthenticated(false);\n            }\n\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getUser();\n    console.log(isLoggedIn);\n  }, [isLoggedIn]);\n  return _jsx(_Fragment, {\n    children: authLoaded ? _jsx(NavigationContainer, {\n      children: isAuthenticated ? _jsx(LandingStack, {}) : _jsx(AuthStack, {})\n    }) : _jsx(ActivityIndicator, {})\n  });\n};\n\nexport default NavigationBar;","map":{"version":3,"sources":["/home/lamaaldohayan/Desktop/project/financeApp/components/NavigationBar.js"],"names":["React","useEffect","useContext","Home","ProfileScreen","CalendarScreen","AddScreen","Charts","ChangeUsername","ChangePhone","Logout","Completed","LoginScreen","GlobalContext","AsyncStorage","NavigationContainer","createBottomTabNavigator","TouchableOpacity","AntDesign","globalStyles","createStackNavigator","Details","RegisterScreen","Tab","Stack","ProfileStack","ProfileStackScreen","headerShown","AuthStack","HomeStack","TabStack","LandingStack","tabBarShowLabel","tabBarIcon","focused","position","top","plusbutton","NavigationBar","isLoggedIn","authState","useState","isAuthenticated","setIsAuthenticated","authLoaded","setAuthLoaded","getUser","getItem","token","console","log"],"mappings":"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","sourcesContent":["import React, {useEffect, useContext} from \"react\";\r\nimport { View, Text, Image, StyleSheet, Button } from \"react-native\";\r\n// import screens\r\nimport Home from \"../screens/Home\";\r\nimport ProfileScreen from \"../screens/Profile\";\r\nimport CalendarScreen from \"../screens/Calendar\";\r\nimport AddScreen from \"../screens/Add\";\r\nimport Charts from \"../screens/Charts\";\r\nimport ChangeUsername from \"./ChangeUsername\";\r\nimport ChangePhone from \"./ChangePhone\";\r\nimport Logout from \"../screens/Auth/LogoutScreen\";\r\nimport Completed from \"./Completed\";\r\nimport LoginScreen from \"../screens/Auth/LoginScreen\";\r\nimport { GlobalContext } from '../context/provider';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {ActivityIndicator} from 'react-native';\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\n// import bottom navigation\r\nimport \"react-native-gesture-handler\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\n//import icons\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport globalStyles from \"../styles/globalElements\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Details from \"../screens/Details\";\r\nimport RegisterScreen from \"../screens/Auth/RegisterScreen\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\nconst ProfileStack = createStackNavigator();\r\n\r\n// Screens Stack\r\nconst ProfileStackScreen = () => {\r\n  return (\r\n    <ProfileStack.Navigator>\r\n      <ProfileStack.Screen\r\n        name=\"profile\"\r\n        component={ProfileScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <ProfileStack.Screen\r\n        name=\"changeUsername\"\r\n        component={ChangeUsername}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <ProfileStack.Screen\r\n        name=\"Logout\"\r\n        component={Logout}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <ProfileStack.Screen\r\n        name=\"completed\"\r\n        component={Completed}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </ProfileStack.Navigator>\r\n  );\r\n};\r\n\r\nconst AuthStack = () => {\r\n  return (\r\n    <Stack.Navigator\r\n    initialRouteName=\"Login\"\r\n      screenOptions={{ headerShown: false }}\r\n    >\r\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nconst HomeStack = () => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{ headerShown: false }}\r\n    >\r\n      <Stack.Screen name=\"Home\" component={Home} />\r\n      <Stack.Screen name=\"TabStack\" component={TabStack} />\r\n      <Stack.Screen name=\"Details\" component={Details} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nconst LandingStack = () => {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{ headerShown: false }}\r\n    >\r\n      <Stack.Screen name=\"TabStack\" component={TabStack} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst TabStack = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{ tabBarShowLabel: false, headerShown: false }}\r\n    >\r\n      <Tab.Screen\r\n        name={\"HomeStack\"}\r\n        component={HomeStack}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <View style={{ position: \"absolute\", top: \"50%\" }}>\r\n              <AntDesign\r\n                name=\"home\"\r\n                size={24}\r\n                color={focused ? \"black\" : \"gray\"}\r\n              />\r\n            </View>\r\n          ),\r\n        }}\r\n      ></Tab.Screen>\r\n\r\n      <Tab.Screen\r\n        name={\"Charts\"}\r\n        component={Charts}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <View style={{ position: \"absolute\", top: \"50%\" }}>\r\n              <AntDesign\r\n                name=\"barschart\"\r\n                size={24}\r\n                color={focused ? \"black\" : \"gray\"}\r\n              />\r\n            </View>\r\n          ),\r\n        }}\r\n      ></Tab.Screen>\r\n\r\n      <Tab.Screen\r\n        name={\"Add\"}\r\n        component={AddScreen}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <TouchableOpacity>\r\n              <View style={globalStyles.plusbutton}>\r\n                <AntDesign\r\n                  name=\"plus\"\r\n                  size={24}\r\n                  color={focused ? \"gray\" : \"white\"}\r\n                />\r\n              </View>\r\n            </TouchableOpacity>\r\n          ),\r\n        }}\r\n      ></Tab.Screen>\r\n\r\n      <Tab.Screen\r\n        name={\"Calendar\"}\r\n        component={CalendarScreen}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <View style={{ position: \"absolute\", top: \"50%\" }}>\r\n              <AntDesign\r\n                name=\"calendar\"\r\n                size={24}\r\n                color={focused ? \"black\" : \"gray\"}\r\n              />\r\n            </View>\r\n          ),\r\n        }}\r\n      ></Tab.Screen>\r\n\r\n      <Tab.Screen\r\n        name={\"Profile\"}\r\n        component={ProfileStackScreen}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <View style={{ position: \"absolute\", top: \"50%\" }}>\r\n              <AntDesign\r\n                name=\"user\"\r\n                size={24}\r\n                color={focused ? \"black\" : \"gray\"}\r\n              />\r\n            </View>\r\n          ),\r\n        }}\r\n      ></Tab.Screen>\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst NavigationBar = () => {\r\n\r\n  const {\r\n    authState: {isLoggedIn},\r\n  } = useContext(GlobalContext);\r\n\r\n  const [isAuthenticated, setIsAuthenticated] = React.useState(isLoggedIn);\r\n  const [authLoaded, setAuthLoaded] = React.useState(false);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const token = await AsyncStorage.getItem('token');\r\n      if (token) {\r\n        setAuthLoaded(true);\r\n\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        setAuthLoaded(true);\r\n\r\n        setIsAuthenticated(false);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n  useEffect(() => {\r\n    getUser();\r\n    console.log(isLoggedIn)\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n   \r\n\r\n<>\r\n{authLoaded ? (\r\n    <NavigationContainer>\r\n\r\n    {isAuthenticated ? \r\n   <LandingStack/>\r\n    :  \r\n    <AuthStack/>}\r\n    </NavigationContainer>\r\n) : (\r\n  <ActivityIndicator />\r\n)}\r\n</>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n"]},"metadata":{},"sourceType":"module"}